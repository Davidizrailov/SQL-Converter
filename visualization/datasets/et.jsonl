{"input":"=COLS> \u2014-+\u2014-1\u2014-+\u2014-2\u2014-+\u2014-3\u2014-+\u2014-4\u2014-+\u2014-5\n\n****** ***************************** Top of Data ********\n\n000100 RAJESH SURNAME1 23125478 MECH 100 10\n\n000110 MADURI SURNAMEA 23125378 MECH 200 09\n\n000200 SUNI SURNAME2 22351875 CHEM 300 10\n\n000210 SIVA SURNAMEB 22351345 CHEM 400 08\n\n000300 RAMS SURNAMEC 21357987 MCA 500 07\n\n000310 HARI SURNAME3 21352287 MCA 600 05\n\n000400 PAVAN SURNAME4 22574821 MTEC 700 03\n\n****** **************************** Bottom of Data ******","code":"\/\/STEP01 EXEC PGM=EZTPA00\n\n\/\/INPUT DD DSN=HLQ1.INPUT01,DISP=SHR\n\n\/\/OUTPUT1 DD DSN=HLQ1.OUTPUT01,\n\n\/\/ DISP=(,CATLG,DELETE),\n\n\/\/ UNIT=SYSALLDA,SPACE=(CYL,(1,1),RLSE),\n\n\/\/ DCB=(RECFM=FB,LRECL=100,BLKSIZE=0)\n\n\/\/SYSPRINT DD SYSOUT=*\n\n\/\/SYSOUT DD SYSOUT=*\n\n\/\/SYSIN DD *\n\nFILE INPUT\n\nINREC 1 80 A\n\nFIRST-NAME 1 6 A HEADING (\u2018FIRST\u2019 \u2018NAME\u2019)\n\nSECOND-NAME 8 8 A HEADING (\u2018SECOND\u2019 \u2018NAME\u2019)\n\nEMPLOYEE-NUM 17 8 N HEADING (\u2018EMPLOYEE\u2019 \u2018NUM\u2019)\n\nBRANCH 26 4 A HEADING (\u2018BRANCH\u2019 \u2018NAME\u2019)\n\nSALARY 31 3 N\n\nJOB-CAT 35 2 N\n\n*\n\nOLD-SAL W 3 P 2\n\nRAISE-PCT W 3 P 2\n\nRAISE-DOL W 3 P 2\n\nTOTAL-SAL W 4 P 2\n\nFILE OUTPUT1 PRINTER\n\n*\n\nJOB INPUT (INPUT)\n\n*\n\nOLD-SAL = SALARY\n\nIF JOB-CAT = 10\n\nRAISE-PCT = 7.00\n\nELSE\n\nRAISE-PCT = 9.00\n\nEND-IF\n\nRAISE-DOL = OLD-SAL * RAISE-PCT \/ 100\n\nTOTAL-SAL = OLD-SAL + RAISE-DOL\n\nPRINT DETAIL-REPORT\n\nPRINT SUMM-REPORT\n\nREPORT DETAIL-REPORT PRINTER OUTPUT1 LINESIZE 80\n\nSEQUENCE BRANCH TOTAL-SAL D\n\nCONTROL BRANCH\n\nTITLE 01 \u2018EMPLOYEES DETAIL SALARY REPORT \u2018\n\nTITLE 02 \u2018DETAIL BY BRANCH \u2013 DESC BY NEW SAL\u2019\n\nLINE 01 BRANCH FIRST-NAME OLD-SAL RAISE-DOL RAISE-PCT TOTAL-SAL\n\nBEFORE-BREAK. PROC\n\nRAISE-PCT = RAISE-PCT \/ TALLY\n\nEND-PROC\n\nREPORT SUMM-REPORT PRINTER OUTPUT1 SUMMARY LINESIZE 80\n\nSEQUENCE BRANCH JOB-CAT\n\nCONTROL BRANCH JOB-CAT\n\nTITLE 01 \u2018EMPLOYEES SUMMARY SALARY REPORT \u2018\n\nLINE 01 BRANCH JOB-CAT OLD-SAL TOTAL-SAL RAISE-DOL\n\n\/*","result":"********************************* Top of Data **********************************\n\n3\/21\/12 EMPLOYEES DETAIL SALARY REPORT PAGE 1\n\nDETAIL BY BRANCH \u2013 DESC BY NEW SAL\n\nBRANCH FIRST\n\nNAME NAME OLD-SAL RAISE-DOL RAISE-PCT TOTAL-SAL\n\nCHEM SIVA 400.00 36.00 9.00 436.00\n\nSUNI 300.00 21.00 7.00 321.00\n\nCHEM 700.00 57.00 8.00 757.00\n\nMCA HARI 600.00 54.00 9.00 654.00\n\nRAMS 500.00 45.00 9.00 545.00\n\nMCA 1100.00 99.00 9.00 1,199.00\n\nMECH MADURI 200.00 18.00 9.00 218.00\n\nRAJESH 100.00 7.00 7.00 107.00\n\nMECH 300.00 25.00 8.00 325.00\n\nMTEC PAVAN 700.00 63.00 9.00 763.00\n\nMTEC 700.00 63.00 9.00 763.00\n\n2800.00 244.00 8.42 3,044.00\n\n3\/21\/12 EMPLOYEES SUMMARY SALARY REPORT PAGE 1\n\nBRANCH\n\nNAME JOB-CAT OLD-SAL TOTAL-SAL RAISE-DOL\n\nCHEM 08 400.00 436.00 36.00\n\nCHEM 10 300.00 321.00 21.00\n\nCHEM 700.00 757.00 57.00\n\nMCA 05 600.00 654.00 54.00\n\nMCA 07 500.00 545.00 45.00\n\nMCA 1100.00 1,199.00 99.00\n\nMECH 09 200.00 218.00 18.00\n\nMECH 10 100.00 107.00 7.00\n\nMECH 300.00 325.00 25.00\n\nMTEC 03 700.00 763.00 63.00\n\nMTEC 700.00 763.00 63.00\n\n2800.00 3,044.00 244.00\n\n******************************** Bottom of Data ********************************","ready_result":true}
{"input":"","code":"FILE PERSNL FB(150 1800)\n\nOLD-EMP# 9 5 N\n\n*\n\nFILE PERSUPD CARD\n\nEMP# 1 5 N\n\nRAISE-PERCENT 7 2 N\n\n*\n\nFILE SORTPER F 150 VIRTUAL\n\nUPD-EMP# 9 5 N\n\nNAME 17 8 A\n\nPAY-GROSS 94 4 P 2\n\nNEWSAL W 4 P 2\n\n*\n\nFILE NEWPERS FB(150 1800)\n\n*\n\nFILE ERRPRINT PRINTER\n\n*\n\n*\n\nSORT PERSNL TO SORTPER USING OLD-EMP#\n\n*\n\nJOB INPUT (SORTPER KEY(UPD-EMP#) +\n\nPERSUPD KEY(EMP#) )\n\n*\n\nIF MATCHED\n\nPRINT NEW-RPT\n\nEND-IF\n\nIF SORTPER\n\nPUT NEWPERS FROM SORTPER\n\nELSE\n\nDISPLAY ERRPRINT EMP# \u2018RECORD NOT MATCHED\u2019\n\nEND-IF\n\n*\n\nREPORT NEW-RPT LINESIZE 80 NOPAGE NODATE\n\nSEQUENCE NAME\n\nTITLE 1 \u2018SALARY UPDATE REPORT\u2019\n\nHEADING UPD-EMP# (\u2018EMPL\u2019 \u2018NUMBER\u2019)\n\nLINE UPD-EMP# NAME PAY-GROSS NEWSAL RAISE-PERCENT\n\n*\n\nEND","result":"","ready_result":true}
{"input":"=COLS> \u2014-+\u2014-1\u2014-+\u2014-2\u2014-+\u2014-3\u2014-+\u2014-4\u2014-+\u2014-5\n\n****** ***************************** Top of Data ********\n\n000100 RAJESH SURNAME1 23125478 MECH\n\n000200 SIVA SURNAME2 22351875 CHEM\n\n000300 HARI SURNAME3 21357987 MCA\n\n000400 PAVAN SURNAME4 22574821 MTEC\n\n****** **************************** Bottom of Data ******","code":"\/\/STEP01 EXEC PGM=EZTPA00\n\n\/\/INPUT DD DSN=HLQ1.INPUT01,DISP=SHR\n\n\/\/OUTPUT1 DD DSN=HLQ1.OUTPUT01,\n\n\/\/ DISP=(,CATLG,DELETE),\n\n\/\/ UNIT=SYSALLDA,SPACE=(CYL,(1,1),RLSE),\n\n\/\/ DCB=(RECFM=FB,LRECL=100,BLKSIZE=0)\n\n\/\/SYSPRINT DD SYSOUT=*\n\n\/\/SYSOUT DD SYSOUT=*\n\n\/\/SYSIN DD *\n\nFILE INPUT\n\nINREC 1 80 A\n\nFIRST-NAME 1 6 A HEADING (\u2018FIRST\u2019 \u2018NAME\u2019)\n\nSECOND-NAME 8 8 A HEADING (\u2018SECOND\u2019 \u2018NAME\u2019)\n\nEMPLOYEE-NUM 17 8 N HEADING (\u2018EMPLOYEE\u2019 \u2018NUM\u2019)\n\nBRANCH 26 4 A HEADING (\u2018BRANCH\u2019 \u2018NAME\u2019)\n\n*\n\nFILE OUTPUT1 PRINTER\n\n*\n\nFILE BRANCHID TABLE INSTREAM . * DEFINE INSTREAM REGION TABLE\n\nARG 1 4 A. DESC 6 10 A. * DEFINE TABLE SPECIAL FIELD IDS\n\nCHEM CHEMICAL\n\nMCA MASTERCOMP\n\nMECH MECHANICAL\n\nMTEC MTECHNOLGY\n\nENDTABLE\n\n*\n\nBRANCH-TEXT W 10 A\n\n*\n\nJOB INPUT (INPUT)\n\n*\n\nIF EMPLOYEE-NUM > 20000000\n\nSEARCH BRANCHID WITH BRANCH GIVING BRANCH-TEXT\n\nPRINT\n\nEND-IF\n\nREPORT PRINTER OUTPUT1 LINESIZE 80\n\nTITLE 01 \u2018EMPLOYEES DATA \u2018\n\nHEADING BRANCH-TEXT (\u2018BRANCH\u2019 \u2018NAME\u2019)\n\nLINE 01 FIRST-NAME SECOND-NAME EMPLOYEE-NUM BRANCH-TEXT\n\n\/*","result":"********************************* Top of Data **********************************\n\n3\/21\/12 EMPLOYEES DATA PAGE 1\n\nFIRST SECOND EMPLOYEE BRANCH\n\nNAME NAME NUM NAME\n\nRAJESH SURNAME1 23125478 MECHANICAL\n\nSIVA SURNAME2 22351875 CHEMICAL\n\nHARI SURNAME3 21357987 MASTERCOMP\n\nPAVAN SURNAME4 22574821 MTECHNOLGY\n\n******************************** Bottom of Data ********************************","ready_result":true}
{"input":"=COLS> \u2014-+\u2014-1\u2014-+\u2014-2\u2014-+\u2014-3\u2014-+\u2014-4\u2014-+\u2014-5\n\n****** ***************************** Top of Data ********\n\n000100 RAJESH SURNAME1 23125478 MECH 100 10\n\n000110 MADURI SURNAMEA 23125378 MECH 200 09\n\n000200 SUNI SURNAME2 22351875 CHEM 300 10\n\n000210 SIVA SURNAMEB 22351345 CHEM 400 08\n\n000300 RAMS SURNAMEC 21357987 MCA 500 07\n\n000310 HARI SURNAME3 21352287 MCA 600 05\n\n000400 PAVAN SURNAME4 22574821 MTEC 700 03\n\n****** **************************** Bottom of Data ******","code":"\/\/STEP01 EXEC PGM=EZTPA00\n\n\/\/INPUT DD DSN=HLQ1.INPUT01,DISP=SHR\n\n\/\/OUTPUT1 DD DSN=HLQ1.OUTPUT01,\n\n\/\/ DISP=(,CATLG,DELETE),\n\n\/\/ UNIT=SYSALLDA,SPACE=(CYL,(1,1),RLSE),\n\n\/\/ DCB=(RECFM=FB,LRECL=100,BLKSIZE=0)\n\n\/\/SYSPRINT DD SYSOUT=*\n\n\/\/SYSOUT DD SYSOUT=*\n\n\/\/SYSIN DD *\n\nFILE INPUT\n\nINREC 1 80 A\n\nFIRST-NAME 1 6 A HEADING (\u2018FIRST\u2019 \u2018NAME\u2019)\n\nSECOND-NAME 8 8 A HEADING (\u2018SECOND\u2019 \u2018NAME\u2019)\n\nEMPLOYEE-NUM 17 8 N HEADING (\u2018EMPLOYEE\u2019 \u2018NUM\u2019)\n\nBRANCH 26 4 A HEADING (\u2018BRANCH\u2019 \u2018NAME\u2019)\n\nSALARY 31 3 N\n\nJOB-CAT 35 2 N\n\n*\n\nOLD-SAL W 3 P 2\n\nRAISE-PCT W 3 P 2\n\nRAISE-DOL W 3 P 2\n\nTOTAL-SAL W 4 P 2\n\nFILE OUTPUT1 PRINTER\n\n*\n\nJOB INPUT (INPUT)\n\n*\n\nOLD-SAL = SALARY\n\nIF JOB-CAT = 10\n\nRAISE-PCT = 7.00\n\nELSE\n\nRAISE-PCT = 9.00\n\nEND-IF\n\nRAISE-DOL = OLD-SAL * RAISE-PCT \/ 100\n\nTOTAL-SAL = OLD-SAL + RAISE-DOL\n\nPRINT DETAIL-REPORT\n\nPRINT SUMM-REPORT\n\nREPORT DETAIL-REPORT PRINTER OUTPUT1 LINESIZE 80\n\nSEQUENCE BRANCH TOTAL-SAL D\n\nCONTROL BRANCH\n\nTITLE 01 \u2018EMPLOYEES DETAIL SALARY REPORT \u2018\n\nTITLE 02 \u2018DETAIL BY BRANCH \u2013 DESC BY NEW SAL\u2019\n\nLINE 01 BRANCH FIRST-NAME OLD-SAL RAISE-DOL RAISE-PCT TOTAL-SAL\n\nBEFORE-BREAK. PROC\n\nRAISE-PCT = RAISE-PCT \/ TALLY\n\nEND-PROC\n\nREPORT SUMM-REPORT PRINTER OUTPUT1 SUMMARY LINESIZE 80\n\nSEQUENCE BRANCH JOB-CAT\n\nCONTROL BRANCH JOB-CAT\n\nTITLE 01 \u2018EMPLOYEES SUMMARY SALARY REPORT \u2018\n\nLINE 01 BRANCH JOB-CAT OLD-SAL TOTAL-SAL RAISE-DOL\n\n\/*","result":"********************************* Top of Data **********************************\n\n3\/21\/12 EMPLOYEES DETAIL SALARY REPORT PAGE 1\n\nDETAIL BY BRANCH \u2013 DESC BY NEW SAL\n\nBRANCH FIRST\n\nNAME NAME OLD-SAL RAISE-DOL RAISE-PCT TOTAL-SAL\n\nCHEM SIVA 400.00 36.00 9.00 436.00\n\nSUNI 300.00 21.00 7.00 321.00\n\nCHEM 700.00 57.00 8.00 757.00\n\nMCA HARI 600.00 54.00 9.00 654.00\n\nRAMS 500.00 45.00 9.00 545.00\n\nMCA 1100.00 99.00 9.00 1,199.00\n\nMECH MADURI 200.00 18.00 9.00 218.00\n\nRAJESH 100.00 7.00 7.00 107.00\n\nMECH 300.00 25.00 8.00 325.00\n\nMTEC PAVAN 700.00 63.00 9.00 763.00\n\nMTEC 700.00 63.00 9.00 763.00\n\n2800.00 244.00 8.42 3,044.00\n\n3\/21\/12 EMPLOYEES SUMMARY SALARY REPORT PAGE 1\n\nBRANCH\n\nNAME JOB-CAT OLD-SAL TOTAL-SAL RAISE-DOL\n\nCHEM 08 400.00 436.00 36.00\n\nCHEM 10 300.00 321.00 21.00\n\nCHEM 700.00 757.00 57.00\n\nMCA 05 600.00 654.00 54.00\n\nMCA 07 500.00 545.00 45.00\n\nMCA 1100.00 1,199.00 99.00\n\nMECH 09 200.00 218.00 18.00\n\nMECH 10 100.00 107.00 7.00\n\nMECH 300.00 325.00 25.00\n\nMTEC 03 700.00 763.00 63.00\n\nMTEC 700.00 763.00 63.00\n\n2800.00 3,044.00 244.00\n\n******************************** Bottom of Data ********************************","ready_result":true}
{"input":"=COLS> \u2014-+\u2014-1\u2014-+\u2014-2\u2014-+\u2014-3\u2014-+\u2014-4\u2014-+\u2014-5\n\n****** ***************************** Top of Data ********\n\n000100 RAJESH SURNAME1 23125478 MECH\n\n000200 SIVA SURNAME2 22351875 CHEM\n\n000300 HARI SURNAME3 21357987 MCA\n\n000400 PAVAN SURNAME4 22574821 MTEC\n\n****** **************************** Bottom of Data ******","code":"\/\/STEP01 EXEC PGM=EZTPA00\n\n\/\/INPUT DD DSN=HLQ1.INPUT01,DISP=SHR\n\n\/\/OUTPUT1 DD DSN=HLQ1.OUTPUT01,\n\n\/\/ DISP=(,CATLG,DELETE),\n\n\/\/ UNIT=SYSALLDA,SPACE=(CYL,(1,1),RLSE),\n\n\/\/ DCB=(RECFM=FB,LRECL=100,BLKSIZE=0)\n\n\/\/SYSPRINT DD SYSOUT=*\n\n\/\/SYSOUT DD SYSOUT=*\n\n\/\/SYSIN DD *\n\nFILE INPUT\n\nINREC 1 80 A\n\nFIRST-NAME 1 6 A HEADING (\u2018FIRST\u2019 \u2018NAME\u2019)\n\nSECOND-NAME 8 8 A HEADING (\u2018SECOND\u2019 \u2018NAME\u2019)\n\nEMPLOYEE-NUM 17 8 N HEADING (\u2018EMPLOYEE\u2019 \u2018NUM\u2019)\n\nBRANCH 26 4 A HEADING (\u2018BRANCH\u2019 \u2018NAME\u2019)\n\n*\n\nFILE OUTPUT1 PRINTER\n\n*\n\nJOB INPUT (INPUT)\n\n*\n\nIF EMPLOYEE-NUM > 20000000\n\nPRINT\n\nEND-IF\n\nREPORT PRINTER OUTPUT1 LINESIZE 80\n\nTITLE 01 \u2018EMPLOYEES DATA \u2018\n\nLINE 01 FIRST-NAME SECOND-NAME EMPLOYEE-NUM BRANCH\n\n\/*","result":"********************************* Top of Data **********************************\n\n3\/16\/12 EMPLOYEES DATA PAGE 1\n\nFIRST SECOND EMPLOYEE BRANCH\n\nNAME NAME NUM NAME\n\nRAJESH SURNAME1 23125478 MECH\n\nSIVA SURNAME2 22351875 CHEM\n\nHARI SURNAME3 21357987 MCA\n\nPAVAN SURNAME4 22574821 MTEC\n\n******************************** Bottom of Data ********************************","ready_result":true}
{"input":"0001\n0002\n0003\n0004","code":"LIST ON\n FILE INMAST FB 4\n   IN-NUM 1 4 N\n FILE OUTFILE PRINTER\n JOB INPUT INMAST\n    PRINT TEMP-REPT\n END-JOB\n*\n REPORT TEMP-REPT PRINTER OUTFILE\n TITLE 1 'ANNUAL REPORT'\n LINE  IN-NUM\n*","result":"106\/02\/12            ANNUAL REPORT         PAGE 1\n-                       0001\n0                       0002\n                        0003\n                        0004","ready_result":true}
{"input":"0001\n0002\n0003\n0004","code":"LIST ON\n FILE INMAST FB 4\n   IN-NUM 1 4 N HEADING ('ACCOUNT' 'NUMBER')\n FILE OUTFILE PRINTER\n JOB INPUT INMAST\n    PRINT TEMP-REPT\n END-JOB\n*\n REPORT TEMP-REPT PRINTER OUTFILE PAGESIZE 50 +\n NOSPREAD NOADJUST NODATE NOPAGE\n TITLE 1 'ANNUAL REPORT'\n LINE  IN-NUM\n*","result":"1ANNUAL REPORT\n-\n ACCOUNT\n NUMBER\n0 0001\n  0002\n  0003\n  0004","ready_result":true}
{"input":"","code":"LIST ON\n FILE OUTFILE1 PRINTER\n*\n WS-VAL1 W 2 A VALUE 'V1'\n WS-VAL2 W 2 A VALUE 'V2'\n WS-VAL3 W 2 A VALUE 'V3'\n*\n JOB INPUT NULL\n PRINT SAMPLE1\n STOP\n REPORT SAMPLE1 PRINTER OUTFILE1 PAGESIZE 55 LINESIZE 80 -\n NODATE NOPAGE NOADJUST NOSPREAD NOHEADING\n TITLE 01 COL 01 'HEADING ' -\n          COL 30 'VALUES '\n LINE 01 COL 10 'VAL 1 IS ' -\n         COL 30 WS-VAL1\n LINE 02 COL 10 'VAL 2 IS ' -\n         COL 30 WS-VAL2\n LINE 03 COL 10 'VAL 2 IS ' -\n         COL 30 WS-VAL3","result":"","ready_result":true}
{"input":"","code":"WS-VAR1 W 8 A \n WS-VAR2 W 8 A VALUE 'KARTHIK ' \n WS-VAR2 W 9 N VALUE ZEROES \n WS-VAR3 W 7 N 2 \n WS-VAR4 W 9 P 0 \n WS-VAR5 W 9 P 2","result":"","ready_result":true}
{"input":"","code":"WS-GROUP W 15 A \n WS-GR1 WS-GROUP 5 A \n WS-GR2 WS-GROUP +5 10 A","result":"","ready_result":true}
{"input":"","code":"LIST ON \n FILE INFILE \n WS-ALPHA W 26 A VALUE 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' \n WS-ALP-ARR WS-ALPHA 1 A OCCURS 26 INDEX ALPHA-NDX \n* \n JOB INPUT NULL \n* PRINT 16TH ALPHABET \n ALPHA-NDX = 15 \n DISPLAY '16TH ALPHABET IS ' WS-ALP-ARR \n STOP.","result":"","ready_result":true}
{"input":"","code":"LIST ON \n FILE INFILE \n WS-DAYS-OF-WEEK W 10 A OCCURS 7 \n* \n JOB INPUT NULL \n MOVE 'SUNDAY' TO WS-DAYS-OF-WEEK(1) \n MOVE 'MONDAY' TO WS-DAYS-OF-WEEK(2) \n MOVE 'TUESDAY' TO WS-DAYS-OF-WEEK(3) \n MOVE 'WEDNESDAY' TO WS-DAYS-OF-WEEK(4) \n MOVE 'THURSDAY' TO WS-DAYS-OF-WEEK(5) \n MOVE 'FRIDAY' TO WS-DAYS-OF-WEEK(6) \n MOVE 'SATURDAY' TO WS-DAYS-OF-WEEK(7) \n DISPLAY '4 TH DAY IS ' WS-DAYS-OF-WEEK(4) \n STOP","result":"","ready_result":true}
{"input":"","code":"LIST ON\n FILE INFILE\n WS-ALPHA W 26 A VALUE 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n WS-ALP-ARR WS-ALPHA 1 A OCCURS 26 INDEX ALPHA-NDX\n*\n JOB INPUT NULL\n* PRINT 16TH ALPHABET\n ALPHA-NDX = 15\n DISPLAY '16TH ALPHABET IS ' WS-ALP-ARR\n STOP.","result":"","ready_result":true}
{"input":"","code":"LIST ON\n FILE INFILE\n WS-DAYS-OF-WEEK W 10 A OCCURS 7\n*\n JOB INPUT NULL\n MOVE 'SUNDAY' TO WS-DAYS-OF-WEEK(1)\n MOVE 'MONDAY' TO WS-DAYS-OF-WEEK(2)\n MOVE 'TUESDAY' TO WS-DAYS-OF-WEEK(3)\n MOVE 'WEDNESDAY' TO WS-DAYS-OF-WEEK(4)\n MOVE 'THURSDAY' TO WS-DAYS-OF-WEEK(5)\n MOVE 'FRIDAY' TO WS-DAYS-OF-WEEK(6)\n MOVE 'SATURDAY' TO WS-DAYS-OF-WEEK(7)\n DISPLAY '4 TH DAY IS ' WS-DAYS-OF-WEEK(4)\n STOP.","result":"","ready_result":true}
{"input":"","code":"LIST ON\n FILE INFILE\n WS-NUERIC W 9 N VALUE 5\n WS-BINARY W 4 B\n WS-PACKED W 5 P 0\n*\n JOB INPUT NULL\n* PRINT 5\n DISPLAY WS-NUMERIC\n* ASSIGN IT TO WS-BINARY\n WS-BINARY = WS-NUMERIC\n DISPLAY WS-BINARY\n* ASSIGN IT TO WS-PACKED\n WS-PACKED = WS-BINARY\n DISPLAY WS-PACKED\n STOP.","result":"","ready_result":true}
{"input":"","code":"*------------------------------------------------------------------*\n* PROGRAM: DEMODB2A                                                *\n* PURPOSE: DEMONSTRATE NATIVE SQL SUPPORT                          *\n*                                                                  *\n* EASYTRAN:  DEBUG=(NOLKGO)                                        *\n* EASYTRAN:  DCLINCL DCLACCTB                                      *\n* END-EASYTRAN                                                     *\n*------------------------------------------------------------------*\n\nPARM SSID('DB2B') SQLID('TESTDB2')\n*------------------------------------------------------------------*\n* PENGIEZT - DB2\/SQL SAMPLE PROGRAM, NATIVE SQL METHOD.            *\n*------------------------------------------------------------------*\nWCUST-DISP-CTR      W         5  P VALUE 0\nWCUST-ID            W         9  A VALUE ' '\nWCUST-ACCT-PRDCT-CD W         3  A VALUE ' '\nWCUST-ACCT-ID       W        23  A VALUE ' '\nWCUST-ACCT-ID-NULL  W         2  B 0 VALUE 0\n\n SQL DECLARE CUXAD-CURS          +\n     CURSOR FOR                  +\n        SELECT                   +\n             CUST_ID,            +\n             CUST_ACCT_PRDCT_CD, +\n             CUST_ACCT_ID        +\n        FROM CUST_TB\n\nJOB INPUT NULL\nPERFORM OPEN-CUXAD-CURS.\n\nDO UNTIL WCUST-DISP-CTR = 100\n   WCUST-DISP-CTR = WCUST-DISP-CTR + 1\n   PERFORM FETCH-NEXT-ADDR\n   IF SQLCODE = ZERO\n      PRINT REPORT1\n   END-IF\nEND-DO.\n\nPERFORM CLOSE-CUXAD-CURS\nSTOP\n\n*---------------------------------------------------------------*\n*      OPEN CURSOR FOE OUR TABLE.                               *\n*---------------------------------------------------------------*\nOPEN-CUXAD-CURS. PROC.\n  SQL OPEN CUXAD-CURS\n\n  CASE SQLCODE\n       WHEN 0\n           DISPLAY ' CUXAD GOOD OPEN ' SQLCODE\n       OTHERWISE\n           DISPLAY ' 1603  CUXAD OPEN  **ERROR ' SQLCODE\n           WCUST-DISP-CTR = 100\n  END-CASE\nEND-PROC.\n\n*---------------------------------------------------------------*\n*      FETCH NEXT ROW                                           *\n*---------------------------------------------------------------*\nFETCH-NEXT-ADDR. PROC.\n\n  SQL FETCH                 +\n      CUXAD-CURS            +\n         INTO               +\n           :WCUST-ID,       +\n           :WCUST-ACCT-PRDCT-CD, +\n           :WCUST-ACCT-ID :WCUST-ACCT-ID-NULL\n\n  CASE SQLCODE\n       WHEN  0\n           DISPLAY WCUST-ID,            +\n                   WCUST-ACCT-PRDCT-CD, +\n                   WCUST-ACCT-ID\n       WHEN  100\n             PERFORM CLOSE-CUXAD-CURS\n             WCUST-DISP-CTR = 100\n       OTHERWISE\n             DISPLAY ' CUXAD   FETCH *ERROR* ' SQLCODE\n             WCUST-DISP-CTR = 100\n  END-CASE\nEND-PROC.\n\n*---------------------------------------------------------------*\n*      CLOSE THE TABLE.                                         *\n*---------------------------------------------------------------*\nCLOSE-CUXAD-CURS. PROC.\n\n  SQL CLOSE CUXAD-CURS\n\n  CASE SQLCODE\n       WHEN 0\n           DISPLAY 'CUXAD GOOD CLOSE ' SQLCODE\n       OTHERWISE\n           DISPLAY ' 1603  CUXAD OPEN  **ERROR*' SQLCODE\n           WCUST-DISP-CTR = 100\n  END-CASE\n\nEND-PROC.\n\n*---------------------------------------------------------------*\n* REPORT STATEMENT.                                             *\n*---------------------------------------------------------------*\nREPORT REPORT1 LINESIZE 80\nCONTROL FINAL NOPRINT\nTITLE 1 'CUSTOMER PRODUCT CODE LISTING'\nLINE 1 WCUST-ID             +\n       WCUST-ACCT-PRDCT-CD  +\n       WCUST-ACCT-ID","result":"","ready_result":true}
{"input":"","code":"*------------------------------------------------------------------*\n* PROGRAM: DEMODB2B                                                *\n* PURPOSE: DEMONSTRATE THE USE OF SQL FILE AS INPUT.               *\n*                                                                  *\n* EASYTRAN:  DCLINCL DCLACCTB                                      *\n* END-EASYTRAN                                                     *\n*------------------------------------------------------------------*\nPARM SSID('DB2B') SQLID('TESTDB2')\n\nFILE FILEIN1 SQL\nSQL INCLUDE                                          +\n          (CUST_ID, CUST_ACCT_PRDCT_CD CUST_ACCT_ID) +\n       LOCATION *                                    +\n       NULLABLE                                      +\n       FROM CUST_TB\n\nWCUST-CTR           W         5  P VALUE 0\n\nJOB INPUT FILEIN1\nWCUST-CTR = WCUST-CTR + 1\nIF WCUST-CTR = 100\n   STOP\nEND-IF.","result":"","ready_result":true}
{"input":"","code":"*------------------------------------------------------------------*\n* PROGRAM: DEMODB2C                                                *\n* PURPOSE: DEMONSTRATE SQL SUPPORT ON JOB STATEMENT                *\n*                                                                  *\n* EASYTRAN:  DCLINCL DCLACCTB                                      *\n* END-EASYTRAN                                                     *\n*------------------------------------------------------------------*\nPARM SSID('DB2B') SQLID('TESTDB2')\n\n*------------------------------------------------------------------*\n* PENGIEZT - DB2\/SQL SAMPLE PROGRAM, \"JOB INPUT SQL\" METHOD.       *\n*------------------------------------------------------------------*\nWCUST-DISP-CTR      W         5  P VALUE 0\nWCUST-ID            W         9  A VALUE ' '\nWCUST-ACCT-PRDCT-CD W         3  A VALUE ' '\nWCUST-ACCT-ID       W        23  A VALUE ' '\n\nJOB INPUT SQL\n SELECT  CUST_ID,              +\n         CUST_ACCT_PRDCT_CD,   +\n         CUST_ACCT_ID          +\n FROM    CUST_TB               +\n INTO   :WCUST-ID,             +\n        :WCUST-ACCT-PRDCT-CD,  +\n        :WCUST-ACCT-ID\n\nWCUST-DISP-CTR = WCUST-DISP-CTR + 1\nIF WCUST-DISP-CTR = 100\n   STOP\nEND-IF.\n\n*---------------- END OF PROGRA******* ----------------------------*","result":"","ready_result":true}
{"input":"","code":"**********************************************************************\n* PROGRAM NAME: DEMOESY1                                             *\n*                                                                    *\n* THIS PROGRAM DOES THE FOLLOWING:                                   *\n*                                                                    *\n* A) CALCULATES BONUS AMOUNT FOR OFFICERS                            *\n* B) PRODUCES A REPORT OF CALCULATED BONUSES                         *\n* C) CREATES AN OUTPUT FILE OF INPUT IMAGE + BONUS AMOUNT            *\n**********************************************************************\nFILE FILEIN DISK  F (80)\n  COMPANY     1   2    A\n  BRANCH      3   3    A\n  OFFICER     6   4    A\n  WAGE        10  08 N 2\n  RATE        18  05 N 3 MASK ('ZZ.999')\n\nFILE FILEOUT DISK F (80)\n OCOMPANY     1   2    A\n OBRANCH      3   3    A\n OOFFICER     6   4    A\n OWAGE        10  08 N 2\n ORATE        18  05 N 3 MASK ('ZZ.999')\n OBONUS       24  08 N 2\n\nBONUS  W       9  N 2\n\nJOB INPUT FILEIN\nIF WAGE NUMERIC AND RATE NUMERIC\n   BONUS = WAGE * (RATE \/ 100)\n   MOVE FILEIN TO FILEOUT\n   OBONUS = BONUS\n   PUT FILEOUT\n   PRINT REPORT1\nEND-IF\n\nREPORT REPORT1 LINESIZE 70 SUMSPACE 0\nCONTROL  FINAL COMPANY\nSUM      WAGE BONUS\nTITLE 1 'EXECUTIVE BONUS REPORT'\nLINE  1  COMPANY BRANCH OFFICER RATE WAGE BONUS","result":"","ready_result":true}
{"input":"","code":"** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **\n* THIS EASYTRIEVE PRODUCES A EXTRACT FILE OF LMS COMMERCIAL LOANS     *\n*      FOR THE PROFITABILITY MANAGEMENT SYSTEM.                       *\n*                                                                     *\n* THE INPUTS.                                                         *\n*       1)THE LMS CL PROOF FILE.                                      *\n*       2)THE LMS CL CONTROL FILE.                                    *\n*       3)THE LMS CL OBLIGATIONS MASTER.                              *\n*       4)THE LMS CL INVOICE FILE.                                    *\n*       5)THE CL ACH TRANSACTION FILE.                                *\n*                                                                     *\n* THE OUTPUT.                                                         *\n*       1)EXTRACT FILE TO CREATE TRANSACTION WAREHOUSE RECORDS        *\n*                                                                     *\n* THE REPORTS.                                                        *\n*       1)DELINQUENCY REPORT (COMMENTED OUT).                         *\n*       2)ALL OTHER REPORTS ARE USED TO CREATE SUMMARY FILES ONLY.    *\n** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** **\nFILE M8104D  VS (300)\n  C$-KEY                            2   30  A\n  C$-001-DELETE-CODE                1    1  A\n  C$-006-RECORD-CODE                2    3  N\n  C$H001-DELETE-CODE                1    1  A\n  C$H006-RECORD-CODE                2    3  N\n  C$H008-BANK-NUMBER                5    2  N\n  C$H009-APPLICATION-CODE           7    1  N\n  C$H014-SEQUENCE-NUMBER           14    2  N\n  C$H030-CURRENT-DATE              32    6  N\n  C$H032-NEXT-WORK-DATE            38    6  N\n  C$H036-LAST-ACCRUAL-DATE         44    6  N\n  C$H050-BANK-NAME                 67   50  A\n  C$W012-REPORT-NUMBER              8    8  A\n  C$W051-LEFT-REPORT-DESCRIPTION   48   30  A\n  C$W052-RIGHT-REPORT-DESCRIPTION  78   30  A\n  C$W100-SPECIAL-REPORT-DATA      133   30  A\n*\nFILE M8124D  VS (2446)\n  M-KEY                             2   22  A\n  M-001-DELETE-CODE                 1    1  A\n  M-005-BANK-NUMBER                 2    2  N\n  M-010-OBLIGOR-NUMBER              4   10  N\n  M-012-APPLICATION-CODE           14    1  N\n  M-015-OBLIGATION-NUMBER          15    6  P 0\n  M-025-RECORD-CODE                21    3  N\n  M-DATE                           27    6  N\n  MC001-DELETE-CODE                 1    1  A\n  MC005-BANK-NUMBER                 2    2  N\n  MC010-OBLIGOR-NUMBER              4   10  N\n  MC012-APPLICATION-CODE           14    1  N\n  MC015-OBLIGATION-NUMBER          15    6  P 0\n  MC025-RECORD-CODE                21    3  N\n  MC038-PROCESS-TYPE               24    4  N\n  MC040-OBLIGATION-SHORT-NAME      29   15  A\n  MC043-OBLIGATION-TYPE            50    2  P\n  MC044-EFFECTIVE-DATE             52    4  P 0  MASK 'ZZ9\/99\/99'\n  MC045-POSTED-DATE                56    4  P 0  MASK 'ZZ9\/99\/99'\n  MC048-LEGAL-MATURITY-DATE        68    4  P 0  MASK 'ZZ9\/99\/99'\n  MC050-DATE-OUT-OF-DEBT           76    4  P 0  MASK 'ZZ9\/99\/99'\n  MC051-LAST-DAILY-TRAN-JOURNAL-DT 80    4  P 0  MASK 'ZZ9\/99\/99'\n  MC060-ORIGINAL-PRINCIPAL-BALANCE 88    8  P 2\n  MC061-CURRENT-PRINCIPAL-BALANCE  96    8  P 2\n  MC062-MONTHLY-CUMMULATIVE-BAL   104    8  P 2\n  MC066-CHARGE-OFF-BALANCE        136    8  P 2\n  MC070-ORIGINAL-OBLIGATION-AMOUN 152    8  P 2\n  MC071-ORIGINAL-OBLIGATION-DATE  160    4  P 0\n  MC080-SERVICE-UNIT              191    5  N\n  MC081-ASSIGNMENT-UNIT           196    5  N\n* MC082-CONTACT-OFFICER           201    5  N\n  MC082-CONTACT-OFFICER           201    5  A\n  MC083-GENERAL-LEDGER-CODE       206    7  N\n  MC091-EXAMINER-CODE-1           222    2  N\n  FC151-AMOUNT-TAKENDOWN          281    8  P 2\n  MC111-DURATION-CODE             250    1  N\n  MC114-DISCOUNT-CODE             256    1  N\n  MC143-SECURED-CODE              267    1  N\n  MC151-PRINCIPAL-BILLED-NOT-PAID 281    8  P 2\n  MC354-USER-AMOUNT               609    8  P 2\n  MC400-ZERO-BALANCE-PROCESS-DATE 680    4  P 0\n  MC410-DIVISION-NUMBER           684    3  N\n  MC411-REGION-NUMBER             687    3  N\n  FC438-ADVISED-COMMITTMENT-SWITCH 764   1  N\n  FC475-AVAILABILITY              765    8  P 2\n  MC544-CUMMULATIVE-CHGOFF-BAL-MTD 877   8  P 2\n  MC546-INTEREST-PAID-TO-PRINCIPAL 885   8  P 2\n  MC700-PARTICIPATION-REF-OBLIGR 1051    6  P 0\n  MC701-PARTICIPATION-SOLD-APPL  1057    1  N\n  MC702-PARTICIPATION-SOLD-OBLGT 1058    6  P 0\n  MC705-PARTICIPATION-SOLD-TYPE  1073    1  A\n  MC730-PARTICIPATION-SEGMENT-RE 1166    2  P\n* MC732-TOTAL-PARTICIPATED-AMOUN 1077    8  P 2\n  MC732-TOTAL-PARTICIPATED-AMOUN 1102    8  P 2\n  MC900-NUMBER-OF-SEGMENTS       1835    2  P 0\n  MC950-SEGMENT-FORMAT-CODE      1837    2  P 0\n* MC950-PRIMARY-SEGMENT          1237  598  A\n  MC950-PRIMARY-SEGMENT          1837  598  A\n  NS001-DELETE-CODE                 1    1  A\n  NS005-BANK-NUMBER                 2    2  N\n  NS010-OBLIGOR-NUMBER              4   10  N\n  NS012-APPLICATION-CODE           14    1  N\n  NS015-OBLIGATION-NUMBER          15    6  P 0\n  NS025-RECORD-CODE                21    3  N\n  NS040-ACTIVE-NUMBER-OF-SEGMENTS  24    1  P 0\n  NS100-SEGMENT-FORMAT-CODE        25    2  P 0\n  NS110-NUMBER-OF-ACTIVE-ENTRIES   27    2  P 0\n*     NS-SEGMENT                   25  404  A    OCCURS (4) -\n      NS-SEGMENT                   25  604  A    OCCURS (4) -\n         INDEX (SEG-NDX)\n*    CURRENT-SEGMENT     NS-SEGMENT    404  A\n     CURRENT-SEGMENT     NS-SEGMENT    604  A\n\nFILE M8134D VS (150 )\n  V-KEY                             2   27  A\n  V-001-DELETE-CODE                 1    1  A\n  V-005-BANK-NUMBER                 2    2  N\n  V-010-OBLIGOR-NUMBER              4   10  N\n  V-013-INVOICE-NUMBER             14   10  N\n  V-025-RECORD-CODE                24    5  N\n  VI001-DELETE-CODE                 1    1  A\n  VI005-BANK-NUMBER                 2    2  N\n  VI010-OBLIGOR-NUMBER              4   10  N\n  VI013-INVOICE-NUMBER             14   10  N\n  VI025-RECORD-CODE                24    5  N\n  VI055-OBLIGATION-NUMBER          35    6  P 0\n  VI060-TOTAL-AMOUNT-BILLED-THIS-P 41    8  P 2  +\n        HEADING 'INVOICE TOTAL'     MASK BWZ\n  VI070-INVOICE-BILLING-DATE       49    4  P 0\n  VI072-INVOICE-BILLING-DUE-DATE   53    4  P 0\n  VI074-FUTURE-OR-CURRENT-CODE     57    1  A\n  VI-INVOICE-DATA                  88   57  A\n      VI-SEGMENT                   88   19  A    OCCURS (3) -\n         INDEX (VI-SEG-NDX)\n     CURRENT-VI-SEGMENT  VI-SEGMENT     19  A\n  VI200-CHARGE-CODE                  VI-SEGMENT               3  N\n  VI210-INVOICE-AMOUNT-BILLED-THIS-C VI-SEGMENT +3            8  P 2\n  VI220-INVC-AMOUNT-THIS-PERIOD      VI-SEGMENT +11           8  P 2\n\nFILE M8234D  VS (450)\n  PROOF-FILE-KEY                    2   22  A\n  PROOF-TRAN-RECORD               107   80  A\n\nFILE ACH\n  ACH-RECORD                        1   80  A\n*\nFILE ME7231\n  EXT-CRITERIA                      1     5 N\n  EXT-BANK                          6     2 N\n  EXT-BRANCH                        8     5 N\n  EXT-TYPE                         13     5 A\n  EXT-DATE                         18     6 N\n  EXT-COUNT                        24    10 P 0\n  EXT-AMOUNT                       24    10 P 2\n\nFILE ME7232\n  EXT-CRITERIA2                     1     5 N\n  EXT-BANK2                         6     2 N\n  EXT-BRANCH2                       8     5 N\n  EXT-OBLIGOR2                     13    10 N\n  EXT-OBLIGAT2                     23    10 N\n  EXT-TYPE2                        33     5 A\n  EXT-DATE2                        38     6 N\n  EXT-AMOUNT2                      44    10 P 2\n  EXT-MAT-DT2                      54     6 N\n  EXT-ORIG-DT2                     60     6 N\n\nFILE SMYFIL VIRTUAL F 43\n  SMY-CRITERIA                      1     5 N\n  SMY-BANK                          6     2 N\n  SMY-BRANCH                        8     5 N\n  SMY-TYPE                         13     5 A\n  SMY-DATE                         18     6 N\n  ACCOUNTS-PER-TYPE                24    10 P 0\n  SMY-AMOUNT                       34    10 P 2\n\nFILE SMYFIL2 VIRTUAL F 43\n  SMY2-CRITERIA                     1     5 N\n  SMY2-BANK                         6     2 N\n  SMY2-BRANCH                       8     5 N\n  SMY2-TYPE                        13     5 A\n  SMY2-DATE                        18     6 N\n  ACCOUNTS-PER-TYPE2               24    10 P 0\n  SMY2-AMOUNT                      34    10 P 2\n\n*\n*   WORK AREA\n*\n*\n   NS-OCCRS                W     3  N\n   RK-OCCRS                W     3  N\n   VI-OCCRS                W     3  N\n   TVI-OCCRS               W     3  N\n   ITR-OCCRS               W     3  N\n\n*\n* PE-INTEREST-HEADER    W                                    404  A\n  PE-INTEREST-HEADER    W                                    604  A\n  PE002-INTEREST-SEGMENT-FORMAT-C    PE-INTEREST-HEADER        2  P 0\n  PE010-INTEREST-HEADER-CHARGE-CD    PE-INTEREST-HEADER +4     3  N\n *PE020-INTEREST-HEADER-EFF-FROM-DT  PE-INTEREST-HEADER +7     4  P 0\n *PE030-INTEREST-HEADER-EFF-TO-DT    PE-INTEREST-HEADER +11    4  P 0\n *PE040-INTEREST-HEADER-RATE         PE-INTEREST-HEADER +15    6  P 8\n  PE045-INTEREST-MEMO-ITEM           PE-INTEREST-HEADER +11    1  N\n *PE510-INTEREST-PRIME-NUMBER        PE-INTEREST-HEADER +135   2  P 0\n *PE521-INTEREST-PRIME-FACTOR-ONE    PE-INTEREST-HEADER +139   1  N\n *PE540-INTEREST-PRIME-FLOOR         PE-INTEREST-HEADER +149   4  P 5\n *PE549-INTEREST-PRIME-CEILING       PE-INTEREST-HEADER +153   4  P 5\n  PE600-INTEREST-EARNED-ITD          PE-INTEREST-HEADER +164   8  P 2\n  PE604-INTEREST-EARNED-MTD          PE-INTEREST-HEADER +180   8  P 2\n  PE606-INTEREST-EARNED-BTD          PE-INTEREST-HEADER +188   8  P 2\n  PE630-INTEREST-PAID-ITD            PE-INTEREST-HEADER +236   8  P 2\n  PE730-INTEREST-BILLED-NOT-RECVD    PE-INTEREST-HEADER +372   8  P 2\n\n*                                                                       00002220\n* RK-PRIME-SCHEDULES    W                                    404  A     00002230\n  RK-PRIME-SCHEDULES    W                                    604  A     00002230\n  RK002-PRIM-SCH-SEGMENT-FORMAT-C    RK-PRIME-SCHEDULES        2  P 0   00002240\n  RK004-PRIM-SCH-ACTIVE-ENTRIES      RK-PRIME-SCHEDULES +2     2  P 0   00002240\n*     RK-BUCKET                      RK-PRIME-SCHEDULES +4    40  A  -  00002410\n      RK-BUCKET                      RK-PRIME-SCHEDULES +4    60  A  -  00002410\n                                         OCCURS (10) INDEX (RKBKT-NDX)  00002420\n*     CURRENT-PRIME-SCH              RK-BUCKET                40  A     00002430\n      CURRENT-PRIME-SCH              RK-BUCKET                60  A     00002430\n  RK010-PRIM-SCH-CHARGE-CODE         RK-BUCKET                 3  N     00002250\n  RK020-PRIM-SCH-EFFECTIVE-FROM-DATE RK-BUCKET          +3     4  P 0   00002260\n  RK030-PRIM-SCH-EFFECTIVE-TO-DATE   RK-BUCKET          +7     4  P 0   00002270\n  RK040-PRIM-SCH-PRIME-NUMBER        RK-BUCKET          +11    3  P 0   00002280\n                                                                        00002370\n* SEGMENT-RECORD        W                                    404  A\n  SEGMENT-RECORD        W                                    604  A\n  SEGMENT-FORMAT-CODE                SEGMENT-RECORD            2  P 0\n  ACTIVE-ENTRIES                     SEGMENT-RECORD     +2     2  P 0\n\n  KEY-C$-KEY            W                   30  A VALUE ' '\n  KEY-C$-006-RECORD-CODE      KEY-C$-KEY     3  N\n  KEY-C$H008-BANK-NUMBER      KEY-C$-KEY +3  2  N\n  KEY-C$H009-APPLICATION-CODE KEY-C$-KEY +5  1  N\n  KEY-C$W012-REPORT-NUMBER    KEY-C$-KEY +6  8  A\n  KEY-C$H014-SEQUENCE-NUMBER  KEY-C$-KEY +12 2  N\n*\n  KEY-M-KEY             W                   22  A VALUE ' '\n  KEY-M-005-BANK-NUMBER       KEY-M-KEY      2  N\n  KEY-M-010-OBLIGOR-NUMBER    KEY-M-KEY  +2 10  N\n  KEY-M-012-APPLICATION-CODE  KEY-M-KEY +12  1  N\n  KEY-M-015-OBLIGATION-NUMBER KEY-M-KEY +13  6  P 0\n  KEY-M-025-RECORD-CODE       KEY-M-KEY +19  3  N\n  KEY-M-025-RECORD-CODE-1     KEY-M-KEY +19  1  N\n\n  KEY-V-KEY             W                   27  A VALUE ' '\n  KEY-V-005-BANK-NUMBER       KEY-V-KEY      2  N\n  KEY-V-010-OBLIGOR-NUMBER    KEY-V-KEY  +2 10  N\n  KEY-V-013-INVOICE-NUMBER    KEY-V-KEY +12 10  N\n  KEY-V-025-RECORD-CODE       KEY-V-KEY +22  5  N\n\n  KEY-V-INVOICE-NUMBER  W                   10  A VALUE ' '\n     KEY-V-YEAR             KEY-V-INVOICE-NUMBER    2 N\n     KEY-V-APPLICATION-CODE KEY-V-INVOICE-NUMBER +2 1 N\n     KEY-V-SEQUENCE-NUMBER  KEY-V-INVOICE-NUMBER +3 7 N\n\n  TRAN-WORK             W                  80  A                        00401000\n   T-BANK                   TRAN-WORK       2  N                        00400000\n   T-APPLICATION            TRAN-WORK +2    1  N VALUE 1                00420000\n   T-BATCH                  TRAN-WORK +3    3  A                        00420000\n   T-SEQ                    TRAN-WORK +6    4  N                        00430000\n   T-OBLIGOR                TRAN-WORK +10  10  N                        00420000\n   T-OBLIGATION             TRAN-WORK +20  10  N                        00420000\n   T-ITEM                   TRAN-WORK +25   5  A                        00420000\n   T-TRAN-CODE              TRAN-WORK +30   4  N                        00430000\n   T-RECORD-CODE            TRAN-WORK +34   3  A                        00400000\n   T-DBID                   TRAN-WORK +37   5  A                        00420000\n   T-DBID-1                 TRAN-WORK +37   1  A                        00420000\n   T-SEGMENT                TRAN-WORK +42   1  N                        00420000\n   T-BUCKET                 TRAN-WORK +43   2  N                        00430000\n   T-SIGN                   TRAN-WORK +45   1  A                        00420000\n   T-VALUE                  TRAN-WORK +46  26  A                        00420000\n   T-INVOICE                TRAN-WORK +60  10  N                        00420000\n   T-SECURITY               TRAN-WORK +72   2  N                        00430000\n   T-AUTH-DBID              TRAN-WORK +74   1  N                        00430000\n   T-AUTH-VALUE             TRAN-WORK +75   5  N                        00430000\n                                                                        05253000\n  START-OBLIGAT-NUMBER  W                    6  P 0 VALUE 0\n  UNPACK-OBLIGAT-NUMBER W                   10  N   VALUE 0\n  PACK-OBLIGAT-NUMBER   W                    6  P 0 VALUE 0\n\n  HOLD-RECORD-CODE      W                 3  N\n  HOLD-DISCOUNT-CODE    W                 1  N\n  HOLD-M-KEY            W                22  A VALUE ' '\n  HOLD-INTEREST-RATE    W                 4  N 2\n  HOLD-NS-OCCRS         W                 3  N\n\n  HOLD-PROCESS-TYPE     W              4  N   HEADING ('PROCESS' 'TYPE')\n   PROCESS-TYPE-LEVEL   HOLD-PROCESS-TYPE 2  N\n   PROCESS-TYPE-LOW     HOLD-PROCESS-TYPE +2 2 N\n   PROCESS-TYPE-3       HOLD-PROCESS-TYPE +2 1 N\n\nLNE-HEADER           W       132 A\n  LNE-BANK-LIT          LNE-HEADER        7 A VALUE 'BANK'\n  LNE-BANK-NUMBER       LNE-HEADER +7     2 N\n  LNE-SPACE             LNE-HEADER +9     3 A VALUE ' '\n  LNE-DATE              LNE-HEADER +12   11 A\n  LNE-REPORT-LIT        LNE-HEADER +23    12 A VALUE 'REPORT ID - '\n  LNE-REPORT-NUMBER     LNE-HEADER +35     9 A VALUE 'LNE999   '\n  LNE-REPORT-NAME       LNE-HEADER +44    75 A VALUE    +\n                                      '             WYZ FINANCIAL CORP'\n  LNE-PAGE-LIT          LNE-HEADER +119  13 A VALUE 'PAGE'\n\nCOMMITMENT-AMOUNT W  15  N 2\nPRINCIPAL-BALANCE W  15  N 2\nINTEREST-OWING    W  13  N 2\nFEES-OWING        W  13  N 2\nOBLIGAT-HST-TOT   W  13  N 2\nW-ORIGINAL        W  15  N 2\nW-PRINCIPAL       W  15  N 2\nW-INTEREST        W  15  N 2\nW-INTEREST-FEE    W  15  N 2\nW-SHORT-NAME W  15  A\nW-BANK       W   2  N  VALUE 00    HEADING 'BANK'\nW-OBLIGOR    W  10  N            MASK '999-999-999-9'\nW-OBLIGAT    W  10  N            MASK '99999-9999-9'\nW-SERVICE    W   5  N\nW-ASSIGNMENT W   5  N      HEADING ('ASSIGNMENT UNIT')\n*W-CONTACT    W   5  N\nW-CONTACT    W   5  A\nW-REGION     W   3  N\nW-DIVISION   W   3  N\nW-INTEREST-RATE W 4 N 2\nW-SECURED-CODE W 1  N      HEADING ('SEC' 'CD')\nW-BANK-NAME  W  50  A   VALUE ' '\nW-REPORT-DATA  W 300 A\n DELQ-CATEGORY1 W-REPORT-DATA    3 N\n DELQ-CATEGORY2 W-REPORT-DATA +3 3 N\n DELQ-CATEGORY3 W-REPORT-DATA +6 3 N\n DELQ-CATEGORY4 W-REPORT-DATA +9 3 N\nW-ACCRUAL-DATE W 6  N\n ACCRUAL-YEAR  W-ACCRUAL-DATE    2 N\n ACCRUAL-MONTH W-ACCRUAL-DATE +2 2 N\n DAYS-IN-MONTH W-ACCRUAL-DATE +4 2 N\nW-LAST-DAILY-TRAN W 6 N\n W-LAST-TRAN-YY W-LAST-DAILY-TRAN    2 N\n W-LAST-TRAN-DD W-LAST-DAILY-TRAN +2 2 N\nW-ZERO-BAL-PROC-D W 6 N\n W-ZERO-BAL-YY  W-ZERO-BAL-PROC-D    2 N\n W-ZERO-BAL-MM  W-ZERO-BAL-PROC-D +2 2 N\n W-ZERO-BAL-DD  W-ZERO-BAL-PROC-D +4 2 N\nW-TIE-TYPE     W 9  A   VALUE ' ' HEADING ('REFERENCE' 'TYPE')\nW-STATUS-CODE W  1  A   VALUE ' '\nW-AMOUNT      W 15  N 2 VALUE 0\nW-LOAN-LOSS       W  15  N 2\nW-GL-CODE    W   7  N      HEADING ('GENERAL' 'LEGER' 'CODE')\nW-GL-ACCOUNT W   5  N      HEADING ('GENERAL' 'LEGER' 'ACCOUNT')\nCRITERIA       W  5 N   VALUE 00000\nREFERENCE-TYPE W 37 A   VALUE ' ' HEADING ('REFERENCE' 'DESCRIPTION')\nPRIMARY-REFERENCE-OBLIGOR   W 10 N VALUE 0 MASK (BWZ '999-999-999-9') +\n                       HEADING ('PRIMARY' 'REFERENCE' 'OBLIGOR')\nREFERENCE-OBLIGOR   W 10 N VALUE 0 MASK (BWZ '999-999-999-9') +\n                       HEADING ('INDIRECT' 'OBLIGOR')\nREFERENCE-OBLIGAT   W 10 N VALUE 0 MASK (BWZ '99999-9999-9') +\n                       HEADING ('INDIRECT' 'OBLIGAT\/ITEM')\nREFERENCE-ITEM      W  5 N VALUE 0 MASK (BWZ '9999-9') +\n                       HEADING ('ITEM')\nW-SW         W   1  N   VALUE 0\nPROC-DATE    W   6  N   VALUE 0\nACCR-DATE    W   6  N   VALUE 0\nACCRUAL-DATE W   6  N   VALUE 0 MASK 'Z9\/99\/99'\nW-MAT-DATE   W   6  N   VALUE 0\nW-ORIG-DATE  W   6  N   VALUE 0\nEXTRACT-SW   W   1  A   VALUE 'N'\nDELQ-LEVEL   W   1  N   VALUE 0\nDELINQ-SW    W   1  A   VALUE ' '\nTABLE-SW     W   1  A   VALUE ' '\nNRF-OBLIGATION W 1  A   VALUE ' '\nZERO-SW      W   1  A   VALUE 'Y'\nCURRENT-MAX-ITR-OCCRS    W  3 N VALUE 0\n  W-COUNT                    W            8  N 0 VALUE 0\n CHARGE-CODE       W     3  N    VALUE 0\n BILLED-AMOUNT     W    15  N 2  VALUE 0\n PAST-DUE-AMOUNT   W    15  N 2  VALUE 0\n REPORT-PAST-DUE   W    15  N 2  VALUE 0\n TEST-AMOUNT       W    15  N 2  VALUE 0\n LEAPS             W     2  N 0  VALUE 0\n DIFF              W     3  N 0  VALUE 0\n START-JULIAN      W     5  N 0\n  START-YY  START-JULIAN    2 N\n  START-JJJ START-JULIAN +2 3 N\n END-JULIAN        W     5  N 0\n  END-YY    END-JULIAN    2 N\n  END-JJJ   END-JULIAN +2 3 N\n\nINVOICE-TABLE                    W                    6500  A\n  INVOICE-TABLE-REC               INVOICE-TABLE         65  A     -\n         OCCURS (100)   INDEX (ITR-SEG-NDX)\n  TVI070-INVOICE-BILLING-DATE     INVOICE-TABLE-REC      4  P 0\n  TVI072-INVOICE-BILLING-DUE-DATE INVOICE-TABLE-REC +4   4  P 0\n  TVI-INVOICE-DATA                INVOICE-TABLE-REC +8  57  A\n      TVI-SEGMENT                 INVOICE-TABLE-REC +8  19  A     -\n         OCCURS (3)     INDEX (TVI-SEG-NDX)\n     CURRENT-TVI-SEGMENT  TVI-SEGMENT     19  A\n  TVI200-CHARGE-CODE                  TVI-SEGMENT             3  N\n  TVI210-INVOICE-AMOUNT-BILLED-THIS-C TVI-SEGMENT +3          8  P 2\n  TVI220-INVC-AMOUNT-THIS-PERIOD      TVI-SEGMENT +11         8  P 2\n\nDATE-IN      W      6 N\n YY-IN  DATE-IN     2 N\n MM-IN  DATE-IN +2  2 N\n DD-IN  DATE-IN +4  2 N\n\nDATE-INA     W      6 N\n YY-INA  DATE-INA     2 N\n MM-INA  DATE-INA +2  2 N\n DD-INA  DATE-INA +4  2 N\n\nDATE-INB     W      6 N\n YY-INB  DATE-INB     2 N\n MM-INB  DATE-INB +2  2 N\n DD-INB  DATE-INB +4  2 N\n\nDATE-INC     W      6 N\n YY-INC  DATE-INC     2 N\n MM-INC  DATE-INC +2  2 N\n DD-INC  DATE-INC +4  2 N\n\nWORK-DATEA   W      6 N\n\nWORK-DATEB   W      6 N\n\nDATE-IN2     W      6 N\n YY-IN2 DATE-IN2    2 N\n MM-IN2 DATE-IN2 +2 2 N\n DD-IN2 DATE-IN2 +4 2 N\n\nDATE-OUT     W      6 N MASK 'Z9\/99\/99'\n MM-OUT DATE-OUT    2 N\n DD-OUT DATE-OUT +2 2 N\n YY-OUT DATE-OUT +4 2 N\n\nDATE-RPT     W      8 A\n MM-RPT DATE-RPT    2 N\n S1-RPT DATE-RPT +2 1 A VALUE '\/'\n DD-RPT DATE-RPT +3 2 N\n S2-RPT DATE-RPT +5 1 A VALUE '\/'\n YY-RPT DATE-RPT +6 2 N\n\nSYS-DATE-IN  W              8 A\n MM-SYS-IN  SYS-DATE-IN     2 N\n MM-SYS-IN-A SYS-DATE-IN    1 A\n MM-SYS-IN-N SYS-DATE-IN    1 N\n S1-SYS-IN  SYS-DATE-IN  +2 1 A VALUE '\/'\n DD-SYS-IN  SYS-DATE-IN  +3 2 N\n S2-SYS-IN  SYS-DATE-IN  +5 1 A VALUE '\/'\n YY-SYS-IN  SYS-DATE-IN  +6 2 N\n\nBUS-DATE     W              6 A\n BUS-CC     BUS-DATE        2 N\n BUS-YY     BUS-DATE     +2 2 N\n BUS-MM     BUS-DATE     +4 2 N\n*\n  WORK-TYPE       W          5  A         HEADING ('TYPE' 'CODE')\n   RATE-CODE         WORK-TYPE       1 A\n   OBLIGATION-TYPE   WORK-TYPE +1    3 N\n   WORK-FILLER       WORK-TYPE +4    1 A\n*\n  DESCRIPTION     W          5  A\n   REAL-GL-CODE      DESCRIPTION     5 N  HEADING ('REAL' 'GL CODE')\n*\nFILE GLCODES  TABLE INSTREAM\nARG    1  7  N\nDESC   9  5  A\n0011200 11200\n0016110 16110\n0017661 17661\n0028237 28237\n0110005 11821\n0110006 11821\n0110203 11821\n0110303 11821\n0110403 11821\n0110404 11821\n0110503 11821\n0110603 11821\n0110703 11821\n0110704 11821\n0110802 11821\n0110803 11821\n0112204 11821\n0112205 11821\n0112207 11821\n0112303 11821\n0112332 11821\n0112402 11821\n0112403 11821\n0112501 11821\n0112601 11821\n0210005 12821\n0210006 12821\n0210203 12821\n0210303 12821\n0210403 12821\n0210503 12821\n0210603 12821\n0210703 12821\n0210704 12821\n0210802 12821\n0210803 12821\n0212204 12821\n0212205 12821\n0212304 12821\n0212332 12821\n0212364 12821\n0212402 12821\n0212403 12821\n0212501 12821\n0212502 12821\n0212601 12821\n0212703 12821\n0310005 12831\n0310006 12831\n0310203 12831\n0310303 12831\n0310403 12831\n0310404 12831\n0310503 12831\n0310603 12831\n0310703 12831\n0310704 12831\n0310802 12831\n0310803 12831\n0312204 12831\n0312205 12831\n0312332 12831\n0312364 12831\n0312402 12831\n0312403 12831\n0312501 12831\n0312601 12831\n0410005 11091\n0410006 11093\n0410203 11095\n0410303 11097\n0410403 11091\n0410404 11093\n0410503 11095\n0410603 11097\n0410734 11091\n0410735 11093\n0410736 11095\n0410737 11097\n0410739 20261\n0410803 11091\n0410835 11093\n0410836 11095\n0410837 11097\n0412204 11341\n0412205 11341\n0412239 20261\n0412304 11341\n0412332 11341\n0412338 20260\n0412364 11341\n0412402 11341\n0412403 11341\n0412501 11341\n0412601 11341\n0412703 20260\nENDTABLE\n*                                       *\n*             LINKAGE FIELDS            *\n*                                       *\n\nJULIAN            W        5 N VALUE 0\nGREGORIAN         W        6 N VALUE 0 MASK '99-99-99'\nREQUEST-SW        W        1 N VALUE 0\nERROR-SW          W        1 N VALUE 0\n\n*\nJOB INPUT M8234D START(GET-PROCESS-DATE) FINISH(ACH-PROC)\n  TRAN-WORK = PROOF-TRAN-RECORD\n  PERFORM TEST-TRANS\n\n TEST-TRANS. PROC\n  IF T-BANK NOT NUMERIC OR T-OBLIGOR NOT NUMERIC OR T-SEQ NOT NUMERIC\n     GO TO END-TEST-TRANS\n  END-IF\n   IF T-BANK NE W-BANK\n        MOVE SPACES             TO  KEY-C$-KEY\n        MOVE 050                TO  KEY-C$-006-RECORD-CODE\n        MOVE T-BANK             TO  KEY-C$H008-BANK-NUMBER\n        MOVE 1                  TO  KEY-C$H009-APPLICATION-CODE\n        MOVE 01                 TO  KEY-C$H014-SEQUENCE-NUMBER\n        READ M8104D KEY KEY-C$-KEY, STATUS\n        IF EOF M8104D, OR FILE-STATUS (M8104D) NOT ZERO\n               DISPLAY ' UNSUCCESSFUL POINT FOR THIS CONTROL RECORD ' +\n                        KEY-C$-KEY\n               DISPLAY ' TRAN = ' TRAN-WORK\n           STOP\n        END-IF\n        MOVE C$H030-CURRENT-DATE TO DATE-IN\n        MOVE C$H030-CURRENT-DATE TO DATE-INC\n        MOVE C$H008-BANK-NUMBER TO W-BANK\n        MOVE C$H050-BANK-NAME  TO  W-BANK-NAME\n        MOVE C$H036-LAST-ACCRUAL-DATE TO W-ACCRUAL-DATE\n        MOVE W-ACCRUAL-DATE           TO  DATE-IN\n        MOVE DATE-IN     TO ACCR-DATE\n   END-IF\n*\n  IF T-TRAN-CODE EQ 4000 THRU 4009\n     KEY-V-005-BANK-NUMBER     = T-BANK\n     KEY-V-010-OBLIGOR-NUMBER  = T-OBLIGOR\n     KEY-V-025-RECORD-CODE     = 00000\n     KEY-V-013-INVOICE-NUMBER  = T-INVOICE\n     POINT M8134D   GE KEY-V-KEY, STATUS\n     IF EOF M8134D , OR FILE-STATUS (M8134D) NOT ZERO\n            DISPLAY ' UNSUCCESSFUL POINT FOR THIS INVOICE    RECORD ' +\n                    '  KEY = ' KEY-V-KEY\n            DISPLAY '      T-WORK    ' TRAN-WORK\n        GO TO END-TEST-TRANS\n     END-IF\n     GET   M8134D\n     IF EOF M8134D , OR FILE-STATUS (M8134D) NOT ZERO\n            DISPLAY ' UNSUCCESSFUL READ  FOR THIS INVOICE    RECORD ' +\n                    '    KEY = ' KEY-V-KEY\n            DISPLAY '      T-WORK    ' TRAN-WORK\n        GO TO END-TEST-TRANS\n     END-IF\n     IF T-INVOICE NOT NUMERIC\n            DISPLAY 'INVOICE NUMBER NOT NUMERIC ' TRAN-WORK\n        GO TO END-TEST-TRANS\n     END-IF\n     IF VI013-INVOICE-NUMBER NE T-INVOICE\n            DISPLAY '  INVOICE NOT FOUND      '   TRAN-WORK\n        GO TO END-TEST-TRANS\n     END-IF\n     T-OBLIGATION = VI055-OBLIGATION-NUMBER\n     PERFORM OBLIGATION-READ\n     IF NRF-OBLIGATION = 'Y'\n        GO TO END-TEST-TRANS\n     END-IF\n     CRITERIA = 00502\n     PRINT TRAN-RPT\n    *READ OBLIGATION FOR ASSIGNMENT UNIT - WRITE REPORT\n     GO TO END-TEST-TRANS\n  END-IF\n  IF T-TRAN-CODE EQ 4022, 4042\n     PERFORM OBLIGATION-READ\n     IF NRF-OBLIGATION = 'Y'\n        GO TO END-TEST-TRANS\n     END-IF\n     CRITERIA = 00502\n     PRINT TRAN-RPT\n    *READ OBLIGATION FOR ASSIGNMENT UNIT - WRITE REPORT\n     GO TO END-TEST-TRANS\n  END-IF\n  IF T-TRAN-CODE EQ 3402, 3502, 3602\n     PERFORM OBLIGATION-READ\n     IF NRF-OBLIGATION = 'Y'\n        GO TO END-TEST-TRANS\n     END-IF\n     CRITERIA = 00501\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****PRINT TRAN-RPT\n    *READ OBLIGATION FOR ASSIGNMENT UNIT - WRITE REPORT\n     GO TO END-TEST-TRANS\n  END-IF\n  IF T-TRAN-CODE EQ 3902\n     PERFORM OBLIGATION-READ\n     IF NRF-OBLIGATION = 'Y'\n        GO TO END-TEST-TRANS\n     END-IF\n     IF PROCESS-TYPE-LOW NE 55\n        CRITERIA = 00531\n       ELSE\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****** CRITERIA = 00501\n ****** ADD THE FOLLOWING\n        GO TO END-TEST-TRANS\n     END-IF\n     PRINT TRAN-RPT\n    *READ OBLIGATION FOR ASSIGNMENT UNIT - CHECK FOR TD - WRITE REPORT\n     GO TO END-TEST-TRANS\n  END-IF\n  IF T-TRAN-CODE EQ 9881\n     PERFORM OBLIGATION-READ\n     IF NRF-OBLIGATION = 'Y'\n        GO TO END-TEST-TRANS\n     END-IF\n     CRITERIA = 00002\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****PRINT TRAN-RPT\n     GO TO END-TEST-TRANS\n  END-IF\n END-TEST-TRANS\n END-PROC\n\n OBLIGATION-READ. PROC\n   NRF-OBLIGATION = ' '\n   IF T-OBLIGOR NOT NUMERIC\n         DISPLAY ' T-OBLIGOR NOT NUMERIC  ' TRAN-WORK\n     NRF-OBLIGATION = 'Y'\n     GO TO END-OBN-READ\n   END-IF\n          MOVE T-BANK                 TO  KEY-M-005-BANK-NUMBER\n          MOVE T-OBLIGOR              TO  KEY-M-010-OBLIGOR-NUMBER\n          MOVE T-APPLICATION          TO  KEY-M-012-APPLICATION-CODE\n          KEY-M-015-OBLIGATION-NUMBER  =  T-OBLIGATION\n          MOVE 300                    TO  KEY-M-025-RECORD-CODE\n  IF T-TRAN-CODE EQ 9881\n     MOVE 200                         TO  KEY-M-025-RECORD-CODE\n  END-IF\n  IF T-TRAN-CODE EQ 4000 THRU 4009\n     MOVE VI074-FUTURE-OR-CURRENT-CODE TO KEY-M-025-RECORD-CODE-1\n  END-IF\n   READ M8124D KEY KEY-M-KEY, STATUS\n   IF EOF M8124D, OR FILE-STATUS (M8124D) NOT ZERO\n         DISPLAY ' END OF FILE OBLIGATION        OBLIGOR ' T-OBLIGOR\n         DISPLAY '    KEY = ' KEY-M-KEY                            +\n                           '  STATUS = ' FILE-STATUS (M8124D)\n         DISPLAY           '               TRAN = ' TRAN-WORK\n     NRF-OBLIGATION = 'Y'\n     GO TO END-OBN-READ\n   END-IF\n     MOVE MC025-RECORD-CODE TO HOLD-RECORD-CODE\n     HOLD-PROCESS-TYPE =  MC038-PROCESS-TYPE\n     W-BANK     = MC005-BANK-NUMBER\n     W-OBLIGOR  = MC010-OBLIGOR-NUMBER\n     UNPACK-OBLIGAT-NUMBER          = MC015-OBLIGATION-NUMBER\n     MOVE UNPACK-OBLIGAT-NUMBER     TO W-OBLIGAT\n     W-SHORT-NAME = MC040-OBLIGATION-SHORT-NAME\n     W-SERVICE    = MC080-SERVICE-UNIT\n     W-ASSIGNMENT = MC081-ASSIGNMENT-UNIT\n     W-GL-CODE    = MC083-GENERAL-LEDGER-CODE\n     IF HOLD-RECORD-CODE EQ 200\n        DESCRIPTION = 'CML99'\n       ELSE\n        SEARCH GLCODES WITH W-GL-CODE GIVING DESCRIPTION\n        IF NOT GLCODES\n           REAL-GL-CODE = 00000\n           DISPLAY 'NO MATCH ' W-BANK ' ' W-OBLIGOR ' ' W-OBLIGAT +\n            '   RECORD CODE ' HOLD-RECORD-CODE '  GL CODE ' W-GL-CODE\n        END-IF\n     END-IF\n     RATE-CODE  = 'F'\n     OBLIGATION-TYPE                 =  MC043-OBLIGATION-TYPE\n     WORK-FILLER     = ' '\n   END-OBN-READ\n END-PROC\n*\n ACH-PROC. PROC\n  ACH-LOOP\n  GET ACH\n   IF EOF ACH\n     GO TO END-ACH\n   END-IF\n  TRAN-WORK = ACH-RECORD\n  PERFORM TEST-TRANS\n  GO TO ACH-LOOP\n  END-ACH\n END-PROC\n\n GET-PROCESS-DATE. PROC\n      MOVE ' ' TO KEY-M-KEY\n      POINT M8124D   GE KEY-M-KEY, STATUS\n      IF EOF M8124D , OR FILE-STATUS (M8124D) NOT ZERO\n             DISPLAY ' UNSUCCESSFUL START FOR OBLIGATION FILE ' +\n                        KEY-M-KEY\n         STOP\n      END-IF\n      GET   M8124D\n      IF EOF M8124D , OR FILE-STATUS (M8124D) NOT ZERO\n         DISPLAY ' UNSUCCESSFUL READ FOR OBLIGATION INTEGRITY RECORD ' +\n                   KEY-M-KEY\n         STOP\n      END-IF\n      DATE-OUT   =     M-DATE\n      MOVE MM-OUT    TO MM-IN\n      MOVE DD-OUT    TO DD-IN\n      MOVE YY-OUT    TO YY-IN\n      MOVE DATE-IN   TO PROC-DATE\n END-PROC\n\n  REPORT TRAN-RPT SUMMARY SUMFILE SMYFIL\n   *SEQUENCE CRITERIA T-BANK W-ASSIGNMENT DESCRIPTION ACCR-DATE\n   *CONTROL CRITERIA NOPRINT T-BANK NOPRINT W-ASSIGNMENT NOPRINT +\n   *        DESCRIPTION NOPRINT ACCR-DATE NOPRINT\n   *LINE    CRITERIA T-BANK W-ASSIGNMENT DESCRIPTION ACCR-DATE   +\n    SEQUENCE CRITERIA T-BANK W-ASSIGNMENT WORK-TYPE ACCR-DATE\n    CONTROL CRITERIA NOPRINT T-BANK NOPRINT W-ASSIGNMENT NOPRINT +\n            WORK-TYPE NOPRINT ACCR-DATE NOPRINT\n    LINE    CRITERIA T-BANK W-ASSIGNMENT WORK-TYPE ACCR-DATE   +\n                                                      W-AMOUNT TALLY\n\n*\nJOB INPUT M8124D START(START-OBLIGAT-PROC) FINISH(LAST-REC-PROC)\n*\n IF W-SW = 0\n          PERFORM TITLE-DATE-PROC\n          MOVE DATE-RPT               TO  LNE-DATE\n   SYS-DATE-IN   =  SYSDATE\n   IF MM-SYS-IN-A  EQ ' '\n       MM-SYS-IN-N = 0\n   END-IF\n  W-SW = 1\n  GO TO JOB\n END-IF\n*\n IF EXTRACT-SW EQ 'Y'\n     IF MC005-BANK-NUMBER NE W-BANK  +\n              OR MC010-OBLIGOR-NUMBER NE W-OBLIGOR +\n              OR MC015-OBLIGATION-NUMBER NE W-OBLIGAT\n        EXTRACT-SW = 'N'\n        PERFORM EXTRACT-ROUTINE\n    END-IF\n END-IF\n*\n IF MC001-DELETE-CODE EQ '1'\n     GO TO JOB\n END-IF\n*\n IF  MC005-BANK-NUMBER  NE W-BANK\n      MOVE SPACES               TO  KEY-C$-KEY\n      MOVE 050                  TO  KEY-C$-006-RECORD-CODE\n      MOVE MC005-BANK-NUMBER    TO  KEY-C$H008-BANK-NUMBER\n      MOVE 1                    TO  KEY-C$H009-APPLICATION-CODE\n      MOVE 01                   TO  KEY-C$H014-SEQUENCE-NUMBER\n      READ  M8104D  KEY KEY-C$-KEY, STATUS\n      IF EOF M8104D,  OR FILE-STATUS (M8104D) NOT ZERO\n             DISPLAY ' UNSUCCESSFUL POINT FOR THIS CONTROL RECORD ' +\n                        KEY-C$-KEY\n         STOP\n      END-IF\n      MOVE C$H030-CURRENT-DATE TO  DATE-IN\n      MOVE C$H030-CURRENT-DATE TO  DATE-INC\n      IF  YY-IN NE  YY-RPT  OR     +\n          MM-IN NE  MM-RPT  OR     +\n          DD-IN NE  DD-RPT\n           DISPLAY ' MASTER FILE AND CONTROL FILE DO NOT MATCH '\n           DISPLAY ' OBLIGATION FILE ' DATE-RPT\n           DISPLAY ' CONTROL FILE ' C$H030-CURRENT-DATE\n           STOP\n      END-IF\n      MOVE C$H008-BANK-NUMBER  TO  W-BANK\n      MOVE C$H050-BANK-NAME    TO  W-BANK-NAME\n      MOVE C$H036-LAST-ACCRUAL-DATE TO W-ACCRUAL-DATE\n      MOVE W-ACCRUAL-DATE             TO  DATE-IN\n      PERFORM LMS-DATE-RTN\n      MOVE DATE-IN       TO ACCR-DATE\n      MOVE DATE-OUT      TO ACCRUAL-DATE\n      PERFORM CONVERT-DATE-PROC\n      END-JULIAN = START-JULIAN\n      IF YY-IN GT 1\n         KEY-V-YEAR = YY-IN - 1\n         KEY-V-APPLICATION-CODE = 1\n         KEY-V-SEQUENCE-NUMBER = 0000000\n        ELSE\n         DISPLAY ' INVALID YEAR TO SUBTRACT FOR INVOICE DELINQUENCY ' +\n                   DATE-IN\n         STOP\n      END-IF\n      MOVE 150                  TO  KEY-C$-006-RECORD-CODE\n      MOVE 'CL257'              TO  KEY-C$W012-REPORT-NUMBER\n      READ  M8104D  KEY KEY-C$-KEY, STATUS\n      IF EOF M8104D,  OR FILE-STATUS (M8104D) NOT ZERO\n             DISPLAY ' UNSUCCESSFUL POINT FOR 150 CONTROL RECORD ' +\n                        KEY-C$-KEY\n         STOP\n      END-IF\n      MOVE C$W100-SPECIAL-REPORT-DATA      TO  W-REPORT-DATA\n END-IF\n*\n  IF MC025-RECORD-CODE EQ 200\n     HOLD-PROCESS-TYPE    =  MC038-PROCESS-TYPE\n    *IF (PROCESS-TYPE-LEVEL EQ 01, 02, 05, 21, 22 AND                +\n    *    PROCESS-TYPE-3 NE 1)                            OR          +\n    *   (PROCESS-TYPE-LEVEL EQ 31, 32 AND                            +\n    *    FC438-ADVISED-COMMITTMENT-SWITCH EQ 1 AND                   +\n    *    PROCESS-TYPE-3 NE 1)\n    *      *** ABOVE ARE ACCEPTABLE CONDITIONS ***\n    *   ELSE\n    *    GO TO OBLIGATION-READ-LOOP\n    *END-IF\n     W-STATUS-CODE            =  'O'\n     DATE-IN =  MC045-POSTED-DATE\n     IF MM-IN EQ MM-RPT AND YY-IN EQ YY-RPT\n        W-STATUS-CODE            =  'N'\n     END-IF\n     DATE-IN =  MC048-LEGAL-MATURITY-DATE\n     DATE-INA =  MC048-LEGAL-MATURITY-DATE\n     WORK-DATEA =  DATE-INA\n     DATE-IN2 =  MC071-ORIGINAL-OBLIGATION-DATE\n     WORK-DATEB =  DATE-INB\n     COMMITMENT-AMOUNT = MC061-CURRENT-PRINCIPAL-BALANCE +       +\n                                        FC151-AMOUNT-TAKENDOWN\n     RATE-CODE  = 'F'\n     OBLIGATION-TYPE                 =  MC043-OBLIGATION-TYPE\n     WORK-FILLER     = ' '\n     IF COMMITMENT-AMOUNT EQ 0\n        IF MM-IN NE MM-RPT OR YY-IN NE YY-RPT\n            GO TO JOB\n        END-IF\n        W-STATUS-CODE            =  'C'\n     END-IF\n     IF FC151-AMOUNT-TAKENDOWN EQ 0\n        CRITERIA = 00164\n       ELSE\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****** CRITERIA = 00163\n     END-IF\n     W-OBLIGOR                      = MC010-OBLIGOR-NUMBER\n     UNPACK-OBLIGAT-NUMBER          = MC015-OBLIGATION-NUMBER\n     MOVE UNPACK-OBLIGAT-NUMBER     TO W-OBLIGAT\n     MOVE MC025-RECORD-CODE TO HOLD-RECORD-CODE\n     W-ASSIGNMENT = MC081-ASSIGNMENT-UNIT\n     W-GL-CODE    = MC083-GENERAL-LEDGER-CODE\n     W-DIVISION   = MC410-DIVISION-NUMBER\n     W-REGION     = MC411-REGION-NUMBER\n     W-CONTACT    = MC082-CONTACT-OFFICER\n     DESCRIPTION = 'CML99'\n    *SEARCH GLCODES WITH W-GL-CODE GIVING DESCRIPTION\n    *IF NOT GLCODES\n    *   REAL-GL-CODE = 00000\n    * * DISPLAY 'NO MATCH ' W-BANK ' ' W-OBLIGOR ' ' W-OBLIGAT +\n    * *  '   RECORD CODE ' HOLD-RECORD-CODE '  GL CODE ' W-GL-CODE\n    *END-IF\n     PRINT BAL-RPT\n  END-IF\nIF MC025-RECORD-CODE EQ 300\n     HOLD-PROCESS-TYPE    =  MC038-PROCESS-TYPE\n    *IF PROCESS-TYPE-LEVEL EQ 54, 56, 57, 59\n    *    GO TO OBLIGATION-READ-LOOP\n    *END-IF\n    ****** DO NOT REPORT PARTICIPATIONS SOLD AS SEPERATE LOANS *****\n    *IF PROCESS-TYPE-LEVEL EQ 53\n    *    GO TO OBLIGATION-READ-LOOP\n    *END-IF\n     EXTRACT-SW = 'Y'\n     ZERO-SW    = 'Y'\n     DELINQ-SW  = ' '\n     W-STATUS-CODE            =  'O'\n     DATE-IN =  MC045-POSTED-DATE\n     DATE-INA =  MC048-LEGAL-MATURITY-DATE\n     WORK-DATEA =  DATE-INA\n     DATE-INB =  MC071-ORIGINAL-OBLIGATION-DATE\n     WORK-DATEB =  DATE-INB\n     IF MM-IN EQ MM-RPT AND YY-IN EQ YY-RPT\n        W-STATUS-CODE            =  'N'\n     END-IF\n     W-LAST-DAILY-TRAN  =  MC051-LAST-DAILY-TRAN-JOURNAL-DT\n     W-ZERO-BAL-PROC-D  =  MC400-ZERO-BALANCE-PROCESS-DATE\n    *CRISP-WORK-APPLICATION-CODE     =  MC043-OBLIGATION-TYPE\n     RATE-CODE  = 'F'\n     IF MC111-DURATION-CODE EQ 2\n        RATE-CODE  = 'V'\n     END-IF\n     OBLIGATION-TYPE                 =  MC043-OBLIGATION-TYPE\n     WORK-FILLER     = ' '\n     HOLD-DISCOUNT-CODE   =  MC114-DISCOUNT-CODE\n     W-ORIGINAL = MC060-ORIGINAL-PRINCIPAL-BALANCE\n     IF PROCESS-TYPE-LOW EQ 51\n        COMMITMENT-AMOUNT = MC060-ORIGINAL-PRINCIPAL-BALANCE\n      ELSE\n        COMMITMENT-AMOUNT = 0\n     END-IF\n     IF COMMITMENT-AMOUNT GE 0\n       *CRISP-LOAN-COMMIT-AMOUNT     =  COMMITMENT-AMOUNT + .5\n       ELSE\n       *CRISP-LOAN-COMMIT-AMOUNT     =  COMMITMENT-AMOUNT - .5\n     END-IF\n     W-PRINCIPAL                     =  MC061-CURRENT-PRINCIPAL-BALANCE\n     W-INTEREST-FEE                  =  0\n   **PRINCIPAL-BALANCE  =                        +\n   **  (MC062-MONTHLY-CUMMULATIVE-BAL     -      +\n   **   MC544-CUMMULATIVE-CHGOFF-BAL-MTD) \/      +\n   **   DAYS-IN-MONTH                     -      +\n   **   MC546-INTEREST-PAID-TO-PRINCIPAL\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n     PRINCIPAL-BALANCE  =                        +\n        MC061-CURRENT-PRINCIPAL-BALANCE   -      +\n        MC066-CHARGE-OFF-BALANCE          -      +\n        MC732-TOTAL-PARTICIPATED-AMOUN    -      +\n        MC546-INTEREST-PAID-TO-PRINCIPAL\n     IF MC062-MONTHLY-CUMMULATIVE-BAL NE 0     OR +\n        MC544-CUMMULATIVE-CHGOFF-BAL-MTD NE 0  OR +\n        MC546-INTEREST-PAID-TO-PRINCIPAL  NE 0\n        ZERO-SW = 'N'\n     END-IF\n     W-OBLIGOR                      = MC010-OBLIGOR-NUMBER\n     UNPACK-OBLIGAT-NUMBER          = MC015-OBLIGATION-NUMBER\n     MOVE UNPACK-OBLIGAT-NUMBER     TO W-OBLIGAT\n     MOVE MC025-RECORD-CODE TO HOLD-RECORD-CODE\n     W-ASSIGNMENT = MC081-ASSIGNMENT-UNIT\n     W-GL-CODE    = MC083-GENERAL-LEDGER-CODE\n     W-DIVISION   = MC410-DIVISION-NUMBER\n     W-REGION     = MC411-REGION-NUMBER\n     W-CONTACT    = MC082-CONTACT-OFFICER\n     W-SECURED-CODE  =  MC143-SECURED-CODE\n     W-LOAN-LOSS       = MC354-USER-AMOUNT\n     SEARCH GLCODES WITH W-GL-CODE GIVING DESCRIPTION\n     IF NOT GLCODES\n        REAL-GL-CODE = 00000\n       *DISPLAY 'NO MATCH ' W-BANK ' ' W-OBLIGOR ' ' W-OBLIGAT +\n       * '   RECORD CODE ' HOLD-RECORD-CODE '  GL CODE ' W-GL-CODE\n     END-IF\n     TABLE-SW     = ' '\n     IF MC151-PRINCIPAL-BILLED-NOT-PAID GT 0 AND W-PRINCIPAL NE 0\n        CHARGE-CODE    = 001\n        BILLED-AMOUNT  = MC151-PRINCIPAL-BILLED-NOT-PAID\n        PAST-DUE-AMOUNT = MC151-PRINCIPAL-BILLED-NOT-PAID\n        PERFORM TEST-DELINQUENCY\n     END-IF\n     W-SHORT-NAME = MC040-OBLIGATION-SHORT-NAME\n     W-INTEREST-RATE   = 0\n     INTEREST-OWING    = 0\n     W-INTEREST-FEE    = 0\n     FEES-OWING        = 0\n     IF MC700-PARTICIPATION-REF-OBLIGR NE 0\n        REFERENCE-OBLIGOR = MC700-PARTICIPATION-REF-OBLIGR\n        REFERENCE-OBLIGAT = MC702-PARTICIPATION-SOLD-OBLGT\n        MOVE MC705-PARTICIPATION-SOLD-TYPE TO W-TIE-TYPE\n     END-IF\n     IF MC900-NUMBER-OF-SEGMENTS EQ 0\n         GO TO JOB\n         END-IF\n     IF MC950-SEGMENT-FORMAT-CODE EQ 100\n        MOVE MC950-PRIMARY-SEGMENT TO PE-INTEREST-HEADER\n        PERFORM TEST-INTEREST-HEADER\n     END-IF\n     IF MC950-SEGMENT-FORMAT-CODE EQ 400, 500\n        MOVE MC950-PRIMARY-SEGMENT TO PE-INTEREST-HEADER\n        PERFORM TEST-FEE-HEADER\n     END-IF\n     IF MC950-SEGMENT-FORMAT-CODE EQ 915 AND RATE-CODE EQ 'F'\n        MOVE MC950-PRIMARY-SEGMENT TO RK-PRIME-SCHEDULES\n      **PERFORM TEST-FEE-HEADER\n        PERFORM TEST-PRIME-SCHEDULES\n     END-IF\nEND-IF\n*\n  IF NS025-RECORD-CODE EQ 350 THRU 399\n     IF NS010-OBLIGOR-NUMBER = W-OBLIGOR AND NS005-BANK-NUMBER EQ W-BANK\n        IF NS015-OBLIGATION-NUMBER EQ W-OBLIGAT\n           NS-OCCRS = 1\n         SEGMENT-LOOP.\n*          SEG-NDX = (NS-OCCRS - 1) * 404\n           SEG-NDX = (NS-OCCRS - 1) * 604\n           MOVE CURRENT-SEGMENT  TO SEGMENT-RECORD\n           IF SEGMENT-FORMAT-CODE EQ 100\n              MOVE SEGMENT-RECORD  TO PE-INTEREST-HEADER\n              PERFORM TEST-INTEREST-HEADER\n           END-IF\n           IF SEGMENT-FORMAT-CODE EQ 400, 500\n              MOVE SEGMENT-RECORD TO PE-INTEREST-HEADER\n              PERFORM TEST-FEE-HEADER\n           END-IF\n           IF SEGMENT-FORMAT-CODE EQ 915 AND RATE-CODE EQ 'F'\n              MOVE SEGMENT-RECORD TO RK-PRIME-SCHEDULES\n            **PERFORM TEST-FEE-HEADER\n              PERFORM TEST-PRIME-SCHEDULES\n           END-IF\n           IF NS-OCCRS LS NS040-ACTIVE-NUMBER-OF-SEGMENTS\n              NS-OCCRS = NS-OCCRS + 1\n              GO TO SEGMENT-LOOP\n           END-IF\n        END-IF\n     END-IF\n  END-IF\n*\n POINT-OBLIGAT-PROC. PROC\n      POINT M8124D   GE KEY-M-KEY, STATUS\n      IF EOF M8124D , OR FILE-STATUS (M8124D) NOT ZERO\n             DISPLAY ' UNSUCCESSFUL POINT FOR THIS OBLIGATION RECORD ' +\n                        KEY-M-KEY\n         STOP\n      END-IF\n END-PROC\n*\n START-OBLIGAT-PROC. PROC\n      MOVE ' ' TO KEY-M-KEY\n      PERFORM POINT-OBLIGAT-PROC\n      W-BANK = 0\n      W-OBLIGOR = 0\n      W-OBLIGAT = 0\n      W-SW = 0\n END-PROC\n*\n TEST-INTEREST-HEADER. PROC\n\n     IF PE002-INTEREST-SEGMENT-FORMAT-C EQ 100\n      * IF PE010-INTEREST-HEADER-CHARGE-CD EQ 190\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n        IF PE045-INTEREST-MEMO-ITEM EQ 0, 1, 4, 5, 6\n           INTEREST-OWING = PE604-INTEREST-EARNED-MTD + INTEREST-OWING\n           W-INTEREST-FEE = W-INTEREST-FEE +               +\n                            PE600-INTEREST-EARNED-ITD -    +\n                            PE630-INTEREST-PAID-ITD\n          *IF W-INTEREST-RATE EQ 0\n          *   IF PE020-INTEREST-HEADER-EFF-FROM-DT LE W-ACCRUAL-DATE +\n          *                        AND                               +\n          *      PE030-INTEREST-HEADER-EFF-TO-DT GE W-ACCRUAL-DATE\n          *         W-INTEREST-RATE = PE040-INTEREST-HEADER-RATE\n          *   END-IF\n          *END-IF\n           IF PE604-INTEREST-EARNED-MTD NE 0\n              ZERO-SW = 'N'\n           END-IF\n           W-INTEREST = PE730-INTEREST-BILLED-NOT-RECVD +      +\n                                   PE606-INTEREST-EARNED-BTD\n           IF PE730-INTEREST-BILLED-NOT-RECVD GT 0 AND +\n                                   W-INTEREST GT 0\n              CHARGE-CODE     = PE010-INTEREST-HEADER-CHARGE-CD\n              BILLED-AMOUNT   = PE730-INTEREST-BILLED-NOT-RECVD\n              PAST-DUE-AMOUNT = PE730-INTEREST-BILLED-NOT-RECVD\n              PERFORM TEST-DELINQUENCY\n           END-IF\n         * IF PE510-INTEREST-PRIME-NUMBER NE 0\n         *    RATE-CODE = 'V'\n         * END-IF\n        END-IF\n     END-IF\n END-PROC\n*\n TEST-FEE-HEADER. PROC\n\n     IF PE002-INTEREST-SEGMENT-FORMAT-C EQ 400\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****** IF PE010-INTEREST-HEADER-CHARGE-CD EQ 430\n        IF PE045-INTEREST-MEMO-ITEM EQ 0, 1, 4, 5, 6\n           FEES-OWING = PE604-INTEREST-EARNED-MTD + FEES-OWING\n           W-INTEREST-FEE = W-INTEREST-FEE +               +\n                            PE600-INTEREST-EARNED-ITD -    +\n                            PE630-INTEREST-PAID-ITD\n           IF PE604-INTEREST-EARNED-MTD NE 0\n              ZERO-SW = 'N'\n           END-IF\n        END-IF\n     END-IF\n END-PROC\n*\n TEST-PRIME-SCHEDULES. PROC\n\n     IF RK002-PRIM-SCH-SEGMENT-FORMAT-C EQ 915                          00009940\n        RK-OCCRS = 1                                                    00010310\n        IF RK004-PRIM-SCH-ACTIVE-ENTRIES GT 0                           00010320\n       RK-BUCKET-LOOP.                                                  00010330\n*          RKBKT-NDX = (RK-OCCRS - 1) * 40                              00010340\n           RKBKT-NDX = (RK-OCCRS - 1) * 60                              00010340\n          *IF W-INTEREST-RATE EQ 0                                      00010000\n              IF RK020-PRIM-SCH-EFFECTIVE-FROM-DATE LE W-ACCRUAL-DATE + 00010010\n                                   AND                               +  00010020\n                 RK030-PRIM-SCH-EFFECTIVE-TO-DATE GE W-ACCRUAL-DATE     00010030\n           IF RK040-PRIM-SCH-PRIME-NUMBER NE 0\n              RATE-CODE = 'V'\n           END-IF\n              END-IF                                                    00010050\n         * END-IF                                                       00010060\n           IF RK-OCCRS LS RK004-PRIM-SCH-ACTIVE-ENTRIES                 00010540\n              RK-OCCRS = RK-OCCRS + 1                                   00010550\n              GO TO RK-BUCKET-LOOP                                      00010560\n           END-IF                                                       00010570\n        END-IF                                                          00010100\n     END-IF                                                             00010110\n END-PROC\n*\n EXTRACT-ROUTINE. PROC\n     DATE-IN =  W-LAST-DAILY-TRAN\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n     DATE-IN2 = W-ZERO-BAL-PROC-D\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****IF W-PRINCIPAL EQ 0 AND W-INTEREST-FEE EQ 0\n ****** IF MM-IN EQ MM-RPT AND YY-IN EQ YY-RPT AND DD-IN EQ DD-RPT\n ****** IF MM-IN EQ W-ZERO-BAL-MM AND YY-IN EQ W-ZERO-BAL-YY\n        IF MM-RPT EQ W-ZERO-BAL-MM AND YY-RPT EQ W-ZERO-BAL-YY\n           W-STATUS-CODE         =  'C'\n        END-IF\n ****END-IF\n    *IF ZERO-SW = 'Y'  AND  W-STATUS-CODE NE 'C'\n    *   GO TO END-EXTRACT\n    *END-IF\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****IF PRINCIPAL-BALANCE NE 0\n     IF PRINCIPAL-BALANCE NE 0 OR W-PRINCIPAL NE 0\n        IF DESCRIPTION EQ '00000'\n           DISPLAY 'NO MATCH ' W-BANK ' ' W-OBLIGOR ' ' W-OBLIGAT +\n            '   RECORD CODE ' HOLD-RECORD-CODE '  GL CODE ' W-GL-CODE\n        END-IF\n        CRITERIA = 00163\n        PRINT BAL-RPT\n        W-AMOUNT = PRINCIPAL-BALANCE\n        CRITERIA = 10041\n      **PRINT BAL-RPT\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n ****** IF PROCESS-TYPE-LEVEL NE 54, 56, 57, 59\n        IF PROCESS-TYPE-LEVEL EQ 51, 52, 55, 58, 61\n           PRINT BAL-RPT\n ****** CHANGES FOR JOHN RADA TO CREATE PMS EXTRACT\n           IF RATE-CODE EQ 'F'\n           EXT-CRITERIA2 = 20001\n           EXT-BANK2     = W-BANK\n           EXT-BRANCH2   = W-ASSIGNMENT\n           EXT-OBLIGOR2  = W-OBLIGOR\n           EXT-OBLIGAT2  = W-OBLIGAT\n           EXT-TYPE2     = OBLIGATION-TYPE\n           EXT-DATE2     = DATE-INC\n           EXT-AMOUNT2   = PRINCIPAL-BALANCE\n           EXT-MAT-DT2   = WORK-DATEA\n           EXT-ORIG-DT2  = WORK-DATEB\n           WORK-DATEA    = 0\n           WORK-DATEB    = 0\n           PUT ME7232\n           END-IF\n ****** END CHANGES\n        END-IF\n      * W-AMOUNT = W-LOAN-LOSS\n      * CRITERIA = 00562\n      * PRINT BAL-RPT\n        W-AMOUNT = 0\n        IF W-SECURED-CODE EQ 2, 3\n           CRITERIA = 00529\n           PRINT BAL-RPT\n        END-IF\n        IF DELINQ-SW EQ 'Y'\n           CRITERIA = 00505\n           PRINT BAL-RPT\n      *    DISPLAY ' DAYS DELINQUENT ' DIFF ' ' W-OBLIGOR ' ' W-OBLIGAT\n        END-IF\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n        IF W-STATUS-CODE EQ 'N' AND W-ORIGINAL GT 0\n           CRITERIA = 00501\n           PRINT BAL-RPT\n        END-IF\n        MOVE CRITERIA TO CRITERIA\n       ELSE\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n        IF W-STATUS-CODE EQ 'N' AND W-ORIGINAL GT 0\n           CRITERIA = 00501\n           PRINT BAL-RPT\n        END-IF\n        IF W-STATUS-CODE EQ 'C'\n           CRITERIA = 00002\n           PRINT BAL-RPT\n        END-IF\n     END-IF\n     IF INTEREST-OWING NE 0\n ****** CHANGES TO MATCH MIKE SEMPLES STATISTICS\n        IF PROCESS-TYPE-LEVEL NE 54, 56, 57, 59\n           W-AMOUNT = INTEREST-OWING\n           CRITERIA = 10058\n           PRINT BAL-RPT\n           W-AMOUNT = 0\n        END-IF\n     END-IF\n     IF FEES-OWING GE 0\n     END-IF\n    END-EXTRACT\n END-PROC\n*\n TITLE-DATE-PROC. PROC\n      DATE-OUT   =     M-DATE\n      MOVE MM-OUT TO MM-RPT\n      MOVE DD-OUT TO DD-RPT\n      MOVE YY-OUT TO YY-RPT\n      MOVE MM-OUT TO BUS-MM\n      MOVE YY-OUT TO BUS-YY\n      IF YY-OUT LE 60\n         BUS-CC = 20\n        ELSE\n         BUS-CC = 19\n      END-IF\n END-PROC\n*\n LMS-DATE-RTN. PROC\n      MOVE MM-IN TO MM-OUT\n      MOVE DD-IN TO DD-OUT\n      MOVE YY-IN TO YY-OUT\n END-PROC\n*\n TEST-DELINQUENCY. PROC\n     IF TABLE-SW = 'Y'\n        ITR-OCCRS = CURRENT-MAX-ITR-OCCRS\n        GO TO READ-INVOICE-TABLE\n     END-IF\n     KEY-V-005-BANK-NUMBER     = W-BANK\n     KEY-V-010-OBLIGOR-NUMBER  = W-OBLIGOR\n     MOVE KEY-V-INVOICE-NUMBER     TO   KEY-V-013-INVOICE-NUMBER\n     KEY-V-025-RECORD-CODE     = 00000\n     POINT M8134D   GE KEY-V-KEY, STATUS\n     IF EOF M8134D , OR FILE-STATUS (M8134D) NOT ZERO\n            DISPLAY ' UNSUCCESSFUL POINT FOR THIS INVOICE    RECORD ' +\n                    '  KEY = ' KEY-V-KEY\n          * DISPLAY '      T-WORK    ' TRAN-WORK\n        GO TO END-TEST-DELINQUENCY\n     END-IF\n     MOVE SPACES               TO  INVOICE-TABLE\n     ITR-OCCRS = 1\n    READ-INVOICE-LOOP\n     GET   M8134D\n     IF EOF M8134D , OR FILE-STATUS (M8134D) NOT ZERO\n            DISPLAY ' UNSUCCESSFUL READ  FOR THIS INVOICE    RECORD ' +\n                    '    KEY = ' KEY-V-KEY                +\n                    '    FILE STATUS ' FILE-STATUS (M8134D)\n           *DISPLAY '      T-WORK    ' TRAN-WORK\n        GO TO END-TEST-DELINQUENCY\n     END-IF\n     IF VI010-OBLIGOR-NUMBER NE W-OBLIGOR\n        GO TO READ-INVOICE-TABLE\n     END-IF\n     IF VI055-OBLIGATION-NUMBER NE W-OBLIGAT\n        GO TO READ-INVOICE-LOOP\n     END-IF\n     IF VI070-INVOICE-BILLING-DATE EQ 9999999\n        GO TO READ-INVOICE-LOOP\n     END-IF\n     ITR-SEG-NDX = (ITR-OCCRS - 1) * 65\n     MOVE VI070-INVOICE-BILLING-DATE  TO  TVI070-INVOICE-BILLING-DATE\n     MOVE VI072-INVOICE-BILLING-DUE-DATE  TO   +\n                                         TVI072-INVOICE-BILLING-DUE-DATE\n     MOVE VI-INVOICE-DATA             TO  TVI-INVOICE-DATA\n     IF ITR-OCCRS LS 100\n        ITR-OCCRS = ITR-OCCRS + 1\n        GO TO READ-INVOICE-LOOP\n     END-IF\n    READ-INVOICE-TABLE\n     TABLE-SW = 'Y'\n     CURRENT-MAX-ITR-OCCRS = ITR-OCCRS\n     TEST-AMOUNT         =   0\n    READ-TABLE-LOOP\n     ITR-SEG-NDX = (ITR-OCCRS - 1) * 65\n     TVI-OCCRS = 1\n    TVI-SEGMENT-LOOP.\n     TVI-SEG-NDX = (TVI-OCCRS - 1) * 19\n     IF TVI200-CHARGE-CODE  NUMERIC\n        IF TVI200-CHARGE-CODE EQ CHARGE-CODE\n            TEST-AMOUNT = TEST-AMOUNT + TVI220-INVC-AMOUNT-THIS-PERIOD\n            IF TEST-AMOUNT GE BILLED-AMOUNT\n                REPORT-PAST-DUE = BILLED-AMOUNT - TEST-AMOUNT +    +\n                                        TVI220-INVC-AMOUNT-THIS-PERIOD\n                DATE-IN = TVI072-INVOICE-BILLING-DUE-DATE\n                PERFORM COMPUTE-DAYS-DIFF\n                GO TO END-TEST-DELINQUENCY\n               ELSE\n                DATE-IN = TVI072-INVOICE-BILLING-DUE-DATE\n                PERFORM CONVERT-DATE-PROC\n                IF END-JULIAN LE START-JULIAN\n                   PAST-DUE-AMOUNT = PAST-DUE-AMOUNT -      +\n                                        TVI220-INVC-AMOUNT-THIS-PERIOD\n                END-IF\n            END-IF\n        END-IF\n     END-IF\n     IF TVI-OCCRS LS 3\n        TVI-OCCRS = TVI-OCCRS + 1\n        GO TO TVI-SEGMENT-LOOP\n     END-IF\n     IF ITR-OCCRS GT 1\n        ITR-OCCRS = ITR-OCCRS - 1\n        GO TO READ-TABLE-LOOP\n     END-IF\n     DISPLAY ' INVOICES DO NOT TOTAL BILLED AMOUNT ' W-BANK ' ' +\n          W-OBLIGOR ' ' W-OBLIGAT\n     DISPLAY '                       BILLED AMOUNT = ' BILLED-AMOUNT +\n            '   INVOICES TOTAL ' TEST-AMOUNT\n     DATE-IN = TVI072-INVOICE-BILLING-DUE-DATE\n     PERFORM COMPUTE-DAYS-DIFF\n   END-TEST-DELINQUENCY\n END-PROC\n*\n LAST-REC-PROC. PROC\n  IF EXTRACT-SW EQ 'Y'\n         EXTRACT-SW = 'N'\n         PERFORM EXTRACT-ROUTINE\n  END-IF\n END-PROC\n*\n CONVERT-DATE-PROC. PROC\n    PERFORM LMS-DATE-RTN\n    GREGORIAN = DATE-OUT\n    REQUEST-SW = 4\n    ERROR-SW = 0\n    PERFORM LNSDATE-RTN\n    MOVE JULIAN TO START-JULIAN\n   *DISPLAY ' JULIAN AND START-JULIAN ' JULIAN ' ' START-JULIAN\n END-PROC\n\n COMPUTE-DAYS-DIFF. PROC\n    PERFORM CONVERT-DATE-PROC\n    IF END-JULIAN LE START-JULIAN\n      *DISPLAY ' PAYMENT SCHEDULES OVERLAP    DUE DATE ' DATE-OUT\n       GO TO END-COMPUTE-DAYS-DIFF\n    END-IF\n    DIFF = END-JJJ - START-JJJ + 1\n    LEAPS = START-YY * 25\n    IF START-YY LS END-YY\n      IF LEAPS = 0\n        DIFF = DIFF + 366\n       ELSE\n        DIFF = DIFF + 365\n      END-IF\n    END-IF\n    IF DIFF LS DELQ-CATEGORY1\n       DELQ-LEVEL = 0\n      ELSE\n       IF DIFF LS DELQ-CATEGORY2\n          DELQ-LEVEL = 1\n         ELSE\n          IF DIFF LS DELQ-CATEGORY3\n             DELQ-LEVEL = 2\n            ELSE\n             IF DIFF LS DELQ-CATEGORY4\n                DELQ-LEVEL = 3\n               ELSE\n                DELQ-LEVEL = 4\n             END-IF\n          END-IF\n       END-IF\n    END-IF\n   *IF DELQ-LEVEL GT 2\n    IF DIFF GT 30\n       DELINQ-SW = 'Y'\n ******PRINT DELQ-RPT\n    END-IF\n   END-COMPUTE-DAYS-DIFF\n END-PROC\n*\n LNSDATE-RTN. PROC\n     CALL LNSDATE  USING (JULIAN GREGORIAN REQUEST-SW ERROR-SW)\n     IF ERROR-SW NE 0\n        DISPLAY ' LNSDATE ERROR ' JULIAN ' ' GREGORIAN ' ' REQUEST-SW\n        STOP\n     END-IF\n END-PROC\n*\n  REPORT DELQ-RPT SPACE 1\n    SEQUENCE W-BANK W-DIVISION W-REGION W-ASSIGNMENT      +\n               W-CONTACT W-OBLIGOR W-OBLIGAT CHARGE-CODE\n   *           W-CONTACT DELQ-LEVEL W-OBLIGOR W-OBLIGAT CHARGE-CODE\n    CONTROL  W-BANK RENUM                                 +\n            W-DIVISION NOPRINT W-REGION NOPRINT W-ASSIGNMENT NOPRINT +\n            W-CONTACT NEWPAGE\n   *        W-CONTACT NEWPAGE DELQ-LEVEL\n    SUM PRINCIPAL-BALANCE REPORT-PAST-DUE\n    TITLE 'DELINQUENCY REPORT AS OF' ACCRUAL-DATE\n    TITLE 2 'DELINQUENT PARAMETERS' DELQ-CATEGORY1 DELQ-CATEGORY2 +\n              DELQ-CATEGORY3 DELQ-CATEGORY4\n    TITLE 3 'BANK' W-BANK +2 'DIVISION' W-DIVISION +2 'REGION' +\n              W-REGION +2 'UNIT' W-ASSIGNMENT +2 'OFFICER' W-CONTACT\n  HEADING HOLD-PROCESS-TYPE ('PROC' 'TYPE')\n  HEADING PRINCIPAL-BALANCE ('CURRENT' 'OUTSTANDING')\n  HEADING INTEREST-OWING    ('TOTAL' 'INT\/FEES DUE')\n  HEADING W-INTEREST-FEE    ('TOTAL' 'INT\/FEES DUE')\n  HEADING CHARGE-CODE ('CHARGE' 'CODE')\n  HEADING PAST-DUE-AMOUNT ('PAST DUE' 'AMOUNT')\n  HEADING REPORT-PAST-DUE ('PAST DUE' 'AMOUNT')\n  HEADING GREGORIAN     ('PAST DUE' 'DATE')\n  HEADING DIFF          ('DAYS' 'OVRDU')\n    LINE   W-OBLIGOR W-OBLIGAT HOLD-PROCESS-TYPE -1 PRINCIPAL-BALANCE +\n         -1 W-INTEREST-FEE   CHARGE-CODE -1 REPORT-PAST-DUE  +\n                                             GREGORIAN    DIFF TALLY\n  * LINE   W-OBLIGOR W-OBLIGAT HOLD-PROCESS-TYPE -1 PRINCIPAL-BALANCE +\n  *      -1 INTEREST-OWING   CHARGE-CODE -1 PAST-DUE-AMOUNT  +\n  *                                          GREGORIAN    DIFF TALLY\n\n  REPORT BAL-RPT SUMMARY SUMFILE SMYFIL2\n   *SEQUENCE CRITERIA W-BANK W-ASSIGNMENT DESCRIPTION ACCR-DATE\n   *CONTROL CRITERIA NOPRINT W-BANK NOPRINT W-ASSIGNMENT NOPRINT +\n   *        DESCRIPTION NOPRINT ACCR-DATE NOPRINT\n   *LINE    CRITERIA W-BANK W-ASSIGNMENT DESCRIPTION ACCR-DATE     +\n    SEQUENCE CRITERIA W-BANK W-ASSIGNMENT WORK-TYPE ACCR-DATE\n    CONTROL CRITERIA NOPRINT W-BANK NOPRINT W-ASSIGNMENT NOPRINT +\n            WORK-TYPE NOPRINT ACCR-DATE NOPRINT\n    LINE    CRITERIA W-BANK W-ASSIGNMENT WORK-TYPE ACCR-DATE     +\n                                                      W-AMOUNT TALLY\n\n*\nJOB INPUT (SMYFIL KEY                                                 +\n             (SMY-CRITERIA SMY-BANK SMY-BRANCH SMY-TYPE SMY-DATE)     +\n           SMYFIL2 KEY                                                +\n             (SMY2-CRITERIA SMY2-BANK SMY2-BRANCH SMY2-TYPE SMY2-DATE))\n\n IF MATCHED\n   IF SMY-CRITERIA EQ 00002\n      ACCOUNTS-PER-TYPE = ACCOUNTS-PER-TYPE + ACCOUNTS-PER-TYPE2\n      PERFORM MOVE-SMYFIL\n     ELSE\n      DISPLAY ' ERROR ON MATCH  ' SMY-CRITERIA ' ' SMY-BRANCH SMY-TYPE\n   END-IF\n   GO TO JOB\n END-IF\n\n IF SMYFIL\n   PERFORM MOVE-SMYFIL\n   GO TO JOB\n END-IF\n\n IF SMYFIL2\n   PERFORM MOVE-SMYFIL2\n   GO TO JOB\n END-IF\n\n DISPLAY ' WHAT AM I DOING HERE????'\n\n MOVE-SMYFIL. PROC\n  EXT-CRITERIA =  SMY-CRITERIA\n  EXT-BANK     =  SMY-BANK\n  EXT-BRANCH   =  SMY-BRANCH\n  EXT-TYPE     =  SMY-TYPE\n  EXT-DATE     =  SMY-DATE\n  EXT-COUNT    =  ACCOUNTS-PER-TYPE\n *IF EXT-CRITERIA EQ 00559, 00560, 00562\n  IF EXT-CRITERIA EQ 10058, 10041\n     EXT-AMOUNT = SMY-AMOUNT\n  END-IF\n**IF EXT-COUNT GT 0\n  IF EXT-COUNT NE 0\n     PUT ME7231\n  END-IF\n END-PROC\n\n MOVE-SMYFIL2. PROC\n  EXT-CRITERIA =  SMY2-CRITERIA\n  EXT-BANK     =  SMY2-BANK\n  EXT-BRANCH   =  SMY2-BRANCH\n  EXT-TYPE     =  SMY2-TYPE\n  EXT-DATE     =  SMY2-DATE\n  EXT-COUNT    =  ACCOUNTS-PER-TYPE2\n *IF EXT-CRITERIA EQ 00559, 00560, 00562\n  IF EXT-CRITERIA EQ 10058, 10041\n     EXT-AMOUNT = SMY2-AMOUNT\n  END-IF\n**IF EXT-COUNT GT 0\n  IF EXT-COUNT NE 0\n     PUT ME7231\n  END-IF\n END-PROC\n*","result":"","ready_result":true}
{"input":"","code":"**********************************************************************\n* PROGRAM: DEMOESY3                                                  *\n* PURPOSE: DEMONSTRATE THE USE OF EASYTRIEVE MACROS FOR LAYOUTS      *\n*          DEMONSTRATE THE USE OF COPYBOOK OPTION IN OUTPUT COBOL    *\n*                                                                    *\n* THIS PROGRAM DOES THE FOLLOWING:                                   *\n*                                                                    *\n* A) CALCULATES BONUS AMOUNT FOR OFFICERS                            *\n* B) PRODUCES A REPORT OF CALCULATED BONUSES                         *\n* C) CREATES AN OUTPUT FILE OF BONUS RECORDS                         *\n*    (BONUS AMOUNT REPLACES THE WAGE FIELD)                          *\n**********************************************************************\nFILE FILEIN DISK  F (80)\n%EZTCOPYA LOC(*) PFX()\n\nFILE FILEOUT DISK F (80)\n%EZTCOPYA LOC(*) PFX(O-)\n\nBONUS  W       9  N 2\n\nJOB INPUT FILEIN\nIF WAGE NUMERIC AND RATE NUMERIC\n   BONUS = WAGE * (RATE \/ 100)\n   MOVE FILEIN TO FILEOUT\n   O-WAGE = BONUS\n   PUT FILEOUT\n   PRINT REPORT1\nEND-IF\n\nREPORT REPORT1 LINESIZE 70 SUMSPACE 0\nCONTROL  FINAL COMPANY\nSUM      WAGE BONUS\nTITLE 1 'EXECUTIVE BONUS REPORT'\nLINE  1  COMPANY BRANCH OFFICER RATE WAGE BONUS","result":"","ready_result":true}
{"input":"","code":"PARM DEBUG(FLOW FLDCHK)\n*\nFILE PERSNL FB(150 1800)\nNAME 17 16 A\nLAST-NAME NAME 8 A\nPAY-GROSS 94 4 P 2\nDEPT 98 3 N\nDATE-OF-HIRE 136 6 N\nHIRE-MM DATE-OF-HIRE 2 N\nHIRE-DD DATE-OF-HIRE +2 2 N\nHIRE-YY DATE-OF-HIRE +4 2 N\nSALARY W 4 P 2\nBONUS W 4 P 2\nRAISE W 4 P 2\nSERVICE W 2 N\nCURR-DATE S 6 N\nCURR-MM CURR-DATE 2 N\nCURR-DD CURR-DATE +2 2 N\nCURR-YY CURR-DATE +4 2 N\n*\nFILE ERRPRINT PRINTER\n*\nJOB INPUT PERSNL\n%GETDATE CURR-DATE\nSALARY = PAY-GROSS * 52\nPERFORM SERVICE-CALC\nIF SERVICE LT 1\nGO TO JOB\nEND-IF\nPERFORM RAISE-CALC\nBONUS = 0\nIF SERVICE GT 14\nPERFORM BONUS-CALC\nEND-IF\nSALARY = SALARY + RAISE + BONUS\nPRINT UPD-RPT\n*\nSERVICE-CALC. PROC\nSERVICE = CURR-YY - HIRE-YY\nIF CURR-MM < HIRE-MM\nSERVICE = SERVICE - 1\nEND-IF\nIF CURR-MM NE HIRE-MM\nGOTO QUIT-SERV-CALC\nEND-IF\nIF CURR-DD < HIRE-DD\nSERVICE = SERVICE - 1\nEND-IF\nQUIT-SERV-CALC\nEND-PROC\n*\nRAISE-CALC. PROC\nIF DEPT LT 940\nRAISE = SALARY * 0.1\nELSE\nRAISE = SALARY * 0.15\nEND-IF\nEND-PROC\n*\nBONUS-CALC. PROC\nIF SALARY GT 29999\nDISPLAY ERRPRINT, LAST-NAME, +5, + 'INELIGIBLE FOR BONUS'\nGOTO QUIT-BONUS\nEND-IF\nIF SERVICE GT 19\nBONUS = 2000\nELSE\nBONUS = 1000\nEND-IF\nPRINT BONUSRPT\nQUIT-BONUS\nEND-PROC\n*\nREPORT UPD-RPT PAGESIZE 51 LINESIZE 63 NODATE NOPAGE\nSEQUENCE DEPT LAST-NAME\nCONTROL DEPT\nTITLE 1 'ANNUAL UPDATE REPORT - SALARIED EMPLOYEES'\nHEADING LAST-NAME 'NAME'\nHEADING SERVICE 'SERV'\nLINE DEPT LAST-NAME SERVICE RAISE SALARY\n*\nREPORT BONUSRPT LINESIZE 60 NODATE NOPAGE\nSEQUENCE DEPT LAST-NAME\nTITLE 1 'ANNUAL BONUS REPORT - SENIOR EMPLOYEES'\nLINE DEPT LAST-NAME SERVICE BONUS\n*","result":"","ready_result":true}
{"input":"","code":"PARM DEBUG(FLOW FLDCHK)\n*\nFILE PERSNL FB(150 1800)\nNAME 17 16 A\nLAST-NAME NAME 8 A\nPAY-GROSS 94 4 P 2\nDEPT 98 3 N\nDATE-OF-HIRE 136 6 N\nHIRE-MM DATE-OF-HIRE 2 N\nHIRE-DD DATE-OF-HIRE +2 2 N\nHIRE-YY DATE-OF-HIRE +4 2 N\nSALARY W 4 P 2\nBONUS W 4 P 2\nRAISE W 4 P 2\nSERVICE W 2 N\nCURR-DATE S 6 N\nCURR-MM CURR-DATE 2 N\nCURR-DD CURR-DATE +2 2 N\nCURR-YY CURR-DATE +4 2 N\n*\nFILE ERRPRINT PRINTER\n*\nJOB INPUT PERSNL\n%GETDATE CURR-DATE\nSALARY = PAY-GROSS * 52\nPERFORM SERVICE-CALC\nIF SERVICE LT 1\nGO TO JOB\nEND-IF\nPERFORM RAISE-CALC\nBONUS = 0\nIF SERVICE GT 14\nPERFORM BONUS-CALC\nEND-IF\nSALARY = SALARY + RAISE + BONUS\nPRINT UPD-RPT\n*\nSERVICE-CALC. PROC\nSERVICE = CURR-YY - HIRE-YY\nIF CURR-MM < HIRE-MM\nSERVICE = SERVICE - 1\nEND-IF\nIF CURR-MM NE HIRE-MM\nGOTO QUIT-SERV-CALC\nEND-IF\nIF CURR-DD < HIRE-DD\nSERVICE = SERVICE - 1\nEND-IF\nQUIT-SERV-CALC\nEND-PROC\n*\nRAISE-CALC. PROC\nIF DEPT LT 940\nRAISE = SALARY * 0.1\nELSE\nRAISE = SALARY * 0.15\nEND-IF\nEND-PROC\n*\nBONUS-CALC. PROC\nIF SALARY GT 29999\nDISPLAY ERRPRINT, LAST-NAME, +5, + 'INELIGIBLE FOR BONUS'\nGOTO QUIT-BONUS\nEND-IF\nIF SERVICE GT 19\nBONUS = 2000\nELSE\nBONUS = 1000\nEND-IF\nPRINT BONUSRPT\nQUIT-BONUS\nEND-PROC\n*\nREPORT UPD-RPT PAGESIZE 51 LINESIZE 63 NODATE NOPAGE\nSEQUENCE DEPT LAST-NAME\nCONTROL DEPT\nTITLE 1 'ANNUAL UPDATE REPORT - SALARIED EMPLOYEES'\nHEADING LAST-NAME 'NAME'\nHEADING SERVICE 'SERV'\nLINE DEPT LAST-NAME SERVICE RAISE SALARY\n*\nREPORT BONUSRPT LINESIZE 60 NODATE NOPAGE\nSEQUENCE DEPT LAST-NAME\nTITLE 1 'ANNUAL BONUS REPORT - SENIOR EMPLOYEES'\nLINE DEPT LAST-NAME SERVICE BONUS\n*","result":"","ready_result":true}
{"input":"","code":"PARM DEBUG(FLOW FLDCHK)\n*\nFILE PERSNL FB(150 1800)\nNAME 17 16 A\nLAST-NAME 17 8 A\nFIRST-NAME 25 8 A\nADDRESS 37 39 A\nSTREET 37 20 A\nCITY 57 12 A\nSTATE 69 2 A\nZIP 71 5 N\nDATE-OF-HIRE 136 6 N\nHIRE-MM 136 2 N\nHIRE-DD 138 2 N\nHIRE-YY 140 2 N\nSERVICE W 2 N\nCURR-DATE S 6 N\nCURR-MM CURR-DATE 2 N\nCURR-DD CURR-DATE +2 2 N\nCURR-YY CURR-DATE +4 2 N\n*\nJOB INPUT PERSNL\n%GETDATE CURR-DATE\nPERFORM SERVICE-CALC\nIF SERVICE GT 19\nPRINT MAILOUT\nEND-IF\n*\nSERVICE-CALC. PROC\nSERVICE = CURR-YY - HIRE-YY\nIF CURR-MM < HIRE-MM\nSERVICE = SERVICE - 1\nEND-IF\nIF CURR-MM NE HIRE-MM\nGOTO QUIT-SERV-CALC\nEND-IF\nIF CURR-DD < HIRE-DD\nSERVICE = SERVICE - 1\nEND-IF\nQUIT-SERV-CALC\nEND-PROC\n*\nREPORT MAILOUT LABELS (ACROSS 2 DOWN 4 SIZE 30)\nSEQUENCE LAST-NAME\nLINE 1 FIRST-NAME -3 LAST-NAME\nLINE 2 STREET\nLINE 3 CITY -3 STATE ZIP\n*","result":"","ready_result":true}
{"input":"","code":"PARM DEBUG(FLOW FLDCHK)\n*\nFILE PERSNL FB(150 1800)\nNAME 17 16 A\nLAST-NAME NAME 8 A\nPAY-GROSS 94 4 P 2\nDEPT 98 3 N\nDATE-OF-HIRE 136 6 N\nHIRE-MM DATE-OF-HIRE 2 N\nHIRE-DD DATE-OF-HIRE +2 2 N\nHIRE-YY DATE-OF-HIRE +4 2 N\nSALARY W 4 P 2\nSERVICE W 2 P 0\nCURR-DATE S 6 N\nCURR-MM CURR-DATE 2 N\nCURR-DD CURR-DATE +2 2 N\nCURR-YY CURR-DATE +4 2 N\nSENIORS W 2 P 0\n*\nJOB INPUT PERSNL\n%GETDATE CURR-DATE\nPERFORM SERVICE-CALC\nIF SERVICE GT 14\nSENIORS = 1\nELSE\nSENIORS = 0\nEND-IF\nSALARY = PAY-GROSS * 52\nPRINT SENR-RPT\n*\nSERVICE-CALC. PROC\nSERVICE = CURR-YY - HIRE-YY\nIF CURR-MM < HIRE-MM\nSERVICE = SERVICE - 1\nEND-IF\nIF CURR-MM NE HIRE-MM\nGOTO QUIT-SERV-CALC\nEND-IF\nIF CURR-DD < HIRE-DD\nSERVICE = SERVICE - 1\nEND-IF\nQUIT-SERV-CALC\nEND-PROC\n*\nREPORT SENR-RPT LINESIZE 62 SUMMARY SPREAD NODATE NOPAGE\nSEQUENCE DEPT\nCONTROL DEPT\nTITLE 1 'SERVICE UPDATE REPORT - SALARIED EMPLOYEES'\nHEADING TALLY ('NUMBER OF' 'EMPLOYEES' 'IN DEPT')\nHEADING SERVICE ('AVERAGE' 'SERVICE')\nHEADING SENIORS ('PERCENT' 'SENIORS')\nHEADING SALARY ('TOTAL' 'SALARY')\nLINE DEPT TALLY SENIORS SERVICE SALARY\n*\nBEFORE-BREAK. PROC\nSENIORS = SENIORS * 100 \/ TALLY + .5\nSERVICE = SERVICE \/ TALLY\nEND-PROC\n*","result":"","ready_result":true}
{"input":"","code":"PARM DEBUG(FLOW FLDCHK)\n*\nFILE PERSNL FB(150 1800)\nOLD-EMP# 9 5 N\n*\nFILE PERSUPD CARD\nEMP# 1 5 N\nRAISE-PERCENT 7 2 N\n*\nFILE SORTPER F 150 VIRTUAL\nUPD-EMP# 9 5 N\nNAME 17 8 A\nPAY-GROSS 94 4 P 2\nNEWSAL W 4 P 2\n*\nFILE NEWPERS FB(150 1800)\n*\nFILE ERRPRINT PRINTER\n*\n*\nSORT PERSNL TO SORTPER USING OLD-EMP#\n*\nJOB INPUT (SORTPER KEY(UPD-EMP#) +\nPERSUPD KEY(EMP#) )\n*\nIF MATCHED\nNEWSAL = PAY-GROSS * (1 + RAISE-PERCENT \/ 100)\nPRINT NEW-RPT\nPAY-GROSS = NEWSAL\nEND-IF\nIF SORTPER\nPUT NEWPERS FROM SORTPER\nELSE\nDISPLAY ERRPRINT EMP# 'RECORD NOT MATCHED'\nEND-IF\n*\nREPORT NEW-RPT LINESIZE 80 NOPAGE NODATE\nSEQUENCE NAME\nTITLE 1 'SALARY UPDATE REPORT'\nTITLE 2 'EMPLOYEES WITH OVER 25 YEARS SERVICE'\nHEADING UPD-EMP# ('EMPL' 'NUMBER')\nHEADING NAME ('EMPL' 'NAME')\nHEADING PAY-GROSS ('OLD' 'SALARY')\nHEADING NEWSAL ('NEW' 'SALARY')\nHEADING RAISE-PERCENT ('RAISE' '%')\nLINE UPD-EMP# NAME PAY-GROSS NEWSAL RAISE-PERCENT\n*\nEND","result":"","ready_result":true}
{"input":"","code":"\/\/EZTRUN   EXEC PGM=EZTPA00\n\/\/SYSPRINT DD SYSOUT=*                                                 \n\/\/SYSABEND DD SYSOUT=*                                                 \n\/\/SYSOUT   DD SYSOUT=*                                                 \n\/\/EZTVFM   DD UNIT=SYSDA,SPACE=(CYL,(25,25))                           \n\/\/EZTMAC   DD DSN=YOUR.MACLIB,DISP=SHR                           \n\/\/INFILE   DD DSN=YOUR.INPUT.FILE,DISP=SHR           \n\/\/SYSIN    DD *                                                         \n PARM DB2SSID('DSP2')\n*\nFILE INFILE\n  INFILE-REC    01 80 A\n\nSQL INCLUDE LOCATION W FROM YOURDB2TABLE1\n*\nSQL DECLARE YOURCSR CURSOR FOR   +\n    SELECT  COLUMN1,             +\n           COLUMN2               +\n      FROM  YOURDB2TABLE1        +\n      WHERE  YOUR CONDITION\n*                                                                       \nJOB INPUT (INFILE) START(INIT-RTN) FINISH (LAST-RTN)\n\nSQL OPEN YOURCSR\n\nIF SQLCODE NE 0 AND SQLCODE NE 100\n   DISPLAY ' SQL CODE : ' SQLCODE\nEND-IF\n*                 \n*                                                                       \nSQL FETCH YOURCSR    +\n    INTO :WS-COL1,       +\n            :WS-COL2\n*                   \n*                                                                                                 \nIF SQLCODE NE 0 AND SQLCODE NE 100\n   DISPLAY ' SQL CODE : ' SQLCODE\nEND-IF\n*                                               \nSQL CLOSE YOURCSR\n*                                                                       \n*                                               \nIF SQLCODE NE 0 AND SQLCODE NE 100\n   DISPLAY ' SQL CODE : ' SQLCODE\nEND-IF\n\n*                                               \nINIT-RTN. PROC                                                         \n    DISPLAY 'Easytrieve DB2 Process Started'                                                     \nEND-PROC\n*                                                                       \nLAST-RTN. PROC                                                         \n    DISPLAY 'Easytrieve DB2 Process Ended'\nEND-PROC                                                               \n\/*                                                                     \n\/\/","result":"","ready_result":true}
{"input":"","code":"FILE INFILE           FB(80 0)\n\nINPUT-RECORD         1   80  A\n  INPUT-ID           1   08  N\n  INPUT-NAM          09 20  A\n  INPUT-ADD          29 20  A\n  INPUT-P            49 10  N\n  FILLER             59 41  A\n\nFILE OUTPUT PRINTER   FB(64 0)\n\n*********************************\n*WORKING STORAGE\n*********************************\nWS-PIPE                  W  1  A\n\n*********************************\n*WORKING ROUTINE\n*********************************\n\n  JOB INPUT(INFILE)\n       PERFORM WRITE-ROUTINE. PROC\n           WS-PIPE = '|'\n           PRINT REDATOUT-RPT\n       END PROC.\n\n  REPORT REDATOUT-RPT\n     PRINTER       OUTFILE  +\n     LINESIZE      63       +\n     PAGE          0        +\n     SKIP          0        +\n     NOPAGE                 +\n     NODATE                 +\n     NOHEADING              +\n\nLINE 01 INPUT-ID              +\n        WS-PIPE               +\n        INPUT-NAME            +\n        WS-PIPE               +\n        INPUT-ADD             +\n        WS-PIPE               +\n        INPUT-PH","result":"","ready_result":true}

