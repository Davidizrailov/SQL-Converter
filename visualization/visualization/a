digraph {
	graph [rankdir=LR]
	process_payroll [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="process_payroll"
>
  <TR><TD><B>Name</B></TD><TD>process_payroll</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>p_date IN DATE</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD>
      <TD>
        dbms_output.put_line(to_char(v_start_date, 'yyyy-Mon-dd, HH24:MI:SS'));<BR/>
        dbms_output.put_line(to_char(v_end_date, 'yyyy-Mon-dd, HH24:MI:SS'));
      </TD>
  </TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        jta_error.throw(-20201, 'There was no work hours recorded for this week: ' || to_char(v_start_date, 'yyyy-Mon-dd, HH24:MI:SS') || ' to ' || to_char(v_end_date, 'yyyy-Mon-dd, HH24:MI:SS'));<BR/>
        jta_error.invalid_input (handled by showing in console and rolling back)<BR/>
        OTHERS (logged into error table and rolled back)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>work_hours, staff, payroll</TD></TR>
</TABLE>> shape=plaintext]
	update_inventory [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="update_inventory"
>
  <TR><TD><B>Name</B></TD><TD>update_inventory</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_product_id IN cost_sales_tracker.product_id%TYPE, p_quantity IN NUMBER, p_new_cost IN cost_sales_tracker.cost_per_unit%TYPE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        jta_error.throw(-20201, 'cannot update a zero amount to inventory');<BR/>
        jta_error.throw(-20201, 'non existing product being updated to inventory');<BR/>
        jta_error.throw(-20201, 'cannot update inventory with non positive cost per unit');<BR/>
        jta_error.throw(-20201, 'cannot remove more items than already exists in inventory');<BR/>
        OTHERS (logged into error table and rolled back)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>products, cost_sales_tracker</TD></TR>
</TABLE>> shape=plaintext]
	restock_urgent [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="restock_urgent"
>
  <TR><TD><B>Name</B></TD><TD>restock_urgent</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>p_staff_id IN staff.staff_id%TYPE</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD><TD>OTHERS (logged into error table and rolled back)</TD></TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>inventory_by_location, products, suppliers_per_products, purchase_orders, purchase_order_lines</TD></TR>
</TABLE>> shape=plaintext]
	get_last_cashier_payout [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_last_cashier_payout"
>
  <TR><TD><B>Name</B></TD><TD>get_last_cashier_payout</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>p_staff_id IN staff.staff_id%TYPE</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>cashier_drawer_assignments.cash_amount_end%TYPE</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (returns 0)<BR/>
        OTHERS (logged into error table, returns NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>cashier_drawer_assignments</TD></TR>
</TABLE>> shape=plaintext]
	get_money_inflow [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_money_inflow"
>
  <TR><TD><B>Name</B></TD><TD>get_money_inflow</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_location_id IN locations.location_id%TYPE, p_start_date IN DATE, p_end_date IN DATE, p_type IN VARCHAR2 := 'cash'</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>cashier_drawer_assignments.cash_amount_start%TYPE</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (throws custom error: 'location does not exist')<BR/>
        jta_error.throw(-20201, 'invalid type, valid types: cash, non-cash');<BR/>
        jta_error.invalid_input (shown in console and returns NULL)<BR/>
        OTHERS (logged into error table and returns NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>locations, cashier_drawer_assignments, cashier_stations</TD></TR>
</TABLE>> shape=plaintext]
	update_taxes [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="update_taxes"
>
  <TR><TD><B>Name</B></TD><TD>update_taxes</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>None</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        jta_error.throw(-20201, 'attempt to update tax to same rate');<BR/>
        jta_error.invalid_input (logged error and continues to next row)<BR/>
        no_data_found (ignored)<BR/>
        OTHERS (logged into error table and rolled back)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>pending_tax_changes, tax_rates, tax_rate_history</TD></TR>
</TABLE>> shape=plaintext]
	get_price_changes [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_price_changes"
>
  <TR><TD><B>Name</B></TD><TD>get_price_changes</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_product_id IN products.product_id%TYPE, p_start_date IN DATE, p_end_date IN DATE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>price_changes_table</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (handled internally by setting old_price to 0)<BR/>
        OTHERS (logged into error table, returns empty table)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>price_history, products</TD></TR>
</TABLE>> shape=plaintext]
	get_profits_for [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_profits_for"
>
  <TR><TD><B>Name</B></TD><TD>get_profits_for</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_start_date IN DATE, p_end_date IN DATE, p_goods_sold OUT NOCOPY NUMBER, p_gross_gain OUT NOCOPY NUMBER, p_costs OUT NOCOPY NUMBER, p_net_gain OUT NOCOPY NUMBER</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        OTHERS (logged into error table; sets output parameters to NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>billed_items, customer_bills, cost_sales_tracker</TD></TR>
</TABLE>> shape=plaintext]
	get_recommended_price_for [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_recommended_price_for"
>
  <TR><TD><B>Name</B></TD><TD>get_recommended_price_for</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_product_id IN products.product_id%TYPE, p_avg_cost OUT NOCOPY products.price_rate%TYPE, p_old_price OUT NOCOPY products.price_rate%TYPE, p_new_price OUT NOCOPY products.price_rate%TYPE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (throws custom error: 'product does not exist or has not been added to inventory')<BR/>
        OTHERS (logged into error table; sets output parameters to NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>products, tax_rates, cost_sales_tracker</TD></TR>
</TABLE>> shape=plaintext]
	evaluate_po_order_line [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="evaluate_po_order_line"
>
  <TR><TD><B>Name</B></TD><TD>evaluate_po_order_line</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_line_id IN purchase_order_lines.po_line_id%TYPE, p_not_enough_to_restock OUT NOCOPY BOOLEAN, p_not_at_min_level OUT NOCOPY BOOLEAN</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (logs a custom error: 'purchase not exist or inventory has never been added for this item'; sets output parameters to TRUE)<BR/>
        OTHERS (logged into error table; sets output parameters to TRUE)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>purchase_order_lines, purchase_orders, inventory_by_location</TD></TR>
</TABLE>> shape=plaintext]
	lookup_barcode [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="lookup_barcode"
>
  <TR><TD><B>Name</B></TD><TD>lookup_barcode</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_barcode IN VARCHAR2, p_product_id OUT NOCOPY products.product_id%TYPE, p_product_name OUT NOCOPY products.product_name%TYPE, p_price_rate OUT NOCOPY products.price_rate%TYPE, p_tax_code OUT NOCOPY tax_rates.tax_code%TYPE, p_tax_rate OUT NOCOPY tax_rates.tax_rate%TYPE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (logs a custom error: 'price look up for item that does not exist'; sets output parameters to NULL)<BR/>
        OTHERS (logged into error table; sets output parameters to NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>products, tax_rates</TD></TR>
</TABLE>> shape=plaintext]
	update_from_bill [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="update_from_bill"
>
  <TR><TD><B>Name</B></TD><TD>update_from_bill</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>p_bill_id IN customer_bills.bill_id%TYPE</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD><TD>OTHERS (logged into error table and rolled back)</TD></TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>billed_items, customer_bills, products, cashier_drawer_assignments, cashier_stations, inventory_by_location, sold_products</TD></TR>
</TABLE>> shape=plaintext]
	update_sales [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="update_sales"
>
  <TR><TD><B>Name</B></TD><TD>update_sales</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>None</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD>
      <TD>
        dbms_output.put_line('*alert application layer*, there was no data to update');
      </TD>
  </TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (prints an alert to the application layer)<BR/>
        OTHERS (logged into error table and rolled back)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>sold_products, customer_bills, billed_items, cost_sales_tracker</TD></TR>
</TABLE>> shape=plaintext]
	add_item_to_bill [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="add_item_to_bill"
>
  <TR><TD><B>Name</B></TD><TD>add_item_to_bill</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_bill_id IN customer_bills.bill_id%TYPE, p_barcode IN products.barcode%TYPE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (throws custom error: 'failed to update bill items because bill status not unpaid')<BR/>
        jta_error.invalid_input (shown in console and rolled back)<BR/>
        OTHERS (logged into error table and rolled back)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>customer_bills, products, tax_rates, billed_items</TD></TR>
</TABLE>> shape=plaintext]
	receive_payment [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="receive_payment"
>
  <TR><TD><B>Name</B></TD><TD>receive_payment</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_bill_id customer_bills.bill_id%TYPE, p_type customer_bills.payment_type%TYPE, p_amount customer_bills.payment_amount%TYPE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>NUMBER</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        jta_error.throw(-20201, 'invalid payment type, valid types: cash, cheque, creditcard, linx')<BR/>
        jta_error.throw(-20201, 'attempt to pay on bill that has already received full payment')<BR/>
        jta_error.throw(-20201, 'invalid money amount, negative number')<BR/>
        jta_error.invalid_input (shown in console and rolled back)<BR/>
        OTHERS (logged into error table and rolled back; returns NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>customer_bills, cashier_drawer_assignments</TD></TR>
</TABLE>> shape=plaintext]
	get_tax_payment_due [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_tax_payment_due"
>
  <TR><TD><B>Name</B></TD><TD>get_tax_payment_due</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>p_tax_code tax_rates.tax_code%TYPE, p_year DATE</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>NUMBER</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (returns 0)<BR/>
        OTHERS (logged into error table and returns NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>billed_items, customer_bills</TD></TR>
</TABLE>> shape=plaintext]
	get_quantity_sold [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_quantity_sold"
>
  <TR><TD><B>Name</B></TD><TD>get_quantity_sold</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_product_id products.product_id%TYPE, p_location_id locations.location_id%TYPE, p_date_start DATE, p_date_end DATE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>NUMBER</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (returns 0)<BR/>
        jta_error.invalid_input (shown in console and returns NULL)<BR/>
        OTHERS (logged into error table and returns NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>products, locations, billed_items, customer_bills, cashier_drawer_assignments, cashier_stations</TD></TR>
</TABLE>> shape=plaintext]
	stock_check [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="stock_check"
>
  <TR><TD><B>Name</B></TD><TD>stock_check</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_product_id IN products.product_id%TYPE, p_location_id IN locations.location_id%TYPE, p_value_counted INTEGER, p_in_stock OUT NOCOPY INTEGER</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (shows error in console and sets p_in_stock to NULL)<BR/>
        OTHERS (logged into error table and sets p_in_stock to NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>inventory_by_location, missing_items, cost_sales_tracker (implicitly through update_inventory procedure)</TD></TR>
</TABLE>> shape=plaintext]
	sunday_check [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="sunday_check"
>
  <TR><TD><B>Name</B></TD><TD>sunday_check</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_staff_id IN staff.staff_id%TYPE, p_month IN DATE, p_sundays OUT NOCOPY INTEGER, p_available OUT NOCOPY BOOLEAN</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (sets p_sundays to 0 and p_available to TRUE)<BR/>
        OTHERS (logged into error table and sets p_sundays and p_available to NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>work_hours</TD></TR>
</TABLE>> shape=plaintext]
	payout [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="payout"
>
  <TR><TD><B>Name</B></TD><TD>payout</TD></TR>
  <TR><TD><B>Parameters</B></TD>
      <TD>p_staff_id IN staff.staff_id%TYPE, p_begin_date IN DATE, p_end_date IN DATE, p_gross_pay OUT NOCOPY payroll.gross_pay%TYPE, p_net_pay OUT NOCOPY payroll.net_pay%TYPE, p_hlt OUT NOCOPY payroll.hlt_surcharge_deduction%TYPE, p_nat OUT NOCOPY payroll.nat_insurance_deduction%TYPE, p_deductions OUT NOCOPY payroll.net_pay%TYPE</TD>
  </TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>None</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD>
      <TD>
        no_data_found (sets p_gross_pay, p_net_pay, and p_deductions to 0)<BR/>
        OTHERS (logged into error table and sets p_gross_pay, p_net_pay, and p_deductions to NULL)
      </TD>
  </TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>payroll</TD></TR>
</TABLE>> shape=plaintext]
	get_name [label=<<TABLE
  ALIGN="CENTER"
  BGCOLOR="lightgrey"
  BORDER="1"
  CELLBORDER="1"
  CELLPADDING="5"
  CELLSPACING="0"
  TITLE="get_name"
>
  <TR><TD><B>Name</B></TD><TD>get_name</TD></TR>
  <TR><TD><B>Parameters</B></TD><TD>p_staff_id staff.staff_id%TYPE</TD></TR>
  <TR><TD><B>Return Value and Type</B></TD><TD>VARCHAR2</TD></TR>
  <TR><TD><B>Standard Output</B></TD><TD>None</TD></TR>
  <TR><TD><B>Errors</B></TD><TD>OTHERS (returns 'Unknown')</TD></TR>
  <TR><TD><B>Tables Accessed</B></TD><TD>staff</TD></TR>
</TABLE>> shape=plaintext]
	customer_bills
	cashier_drawer_assignments
	customer_bills -> cashier_drawer_assignments [style=invis weight=50]
	purchase_order_lines
	cashier_drawer_assignments -> purchase_order_lines [style=invis weight=50]
	cashier_stations
	purchase_order_lines -> cashier_stations [style=invis weight=50]
	products
	cashier_stations -> products [style=invis weight=50]
	price_history
	products -> price_history [style=invis weight=50]
	staff
	price_history -> staff [style=invis weight=50]
	sold_products
	staff -> sold_products [style=invis weight=50]
	payroll
	sold_products -> payroll [style=invis weight=50]
	"cost_sales_tracker (implicitly through update_inventory procedure)"
	payroll -> "cost_sales_tracker (implicitly through update_inventory procedure)" [style=invis weight=50]
	missing_items
	"cost_sales_tracker (implicitly through update_inventory procedure)" -> missing_items [style=invis weight=50]
	suppliers_per_products
	missing_items -> suppliers_per_products [style=invis weight=50]
	work_hours
	suppliers_per_products -> work_hours [style=invis weight=50]
	tax_rate_history
	work_hours -> tax_rate_history [style=invis weight=50]
	cost_sales_tracker
	tax_rate_history -> cost_sales_tracker [style=invis weight=50]
	pending_tax_changes
	cost_sales_tracker -> pending_tax_changes [style=invis weight=50]
	purchase_orders
	pending_tax_changes -> purchase_orders [style=invis weight=50]
	locations
	purchase_orders -> locations [style=invis weight=50]
	tax_rates
	locations -> tax_rates [style=invis weight=50]
	billed_items
	tax_rates -> billed_items [style=invis weight=50]
	inventory_by_location
	billed_items -> inventory_by_location [style=invis weight=50]
	process_payroll -> work_hours
	process_payroll -> staff
	process_payroll -> payroll
	update_inventory -> products
	update_inventory -> cost_sales_tracker
	restock_urgent -> inventory_by_location
	restock_urgent -> products
	restock_urgent -> suppliers_per_products
	restock_urgent -> purchase_orders
	restock_urgent -> purchase_order_lines
	get_last_cashier_payout -> cashier_drawer_assignments
	get_money_inflow -> locations
	get_money_inflow -> cashier_drawer_assignments
	get_money_inflow -> cashier_stations
	update_taxes -> pending_tax_changes
	update_taxes -> tax_rates
	update_taxes -> tax_rate_history
	get_price_changes -> price_history
	get_price_changes -> products
	get_profits_for -> billed_items
	get_profits_for -> customer_bills
	get_profits_for -> cost_sales_tracker
	get_recommended_price_for -> products
	get_recommended_price_for -> tax_rates
	get_recommended_price_for -> cost_sales_tracker
	evaluate_po_order_line -> purchase_order_lines
	evaluate_po_order_line -> purchase_orders
	evaluate_po_order_line -> inventory_by_location
	lookup_barcode -> products
	lookup_barcode -> tax_rates
	update_from_bill -> billed_items
	update_from_bill -> customer_bills
	update_from_bill -> products
	update_from_bill -> cashier_drawer_assignments
	update_from_bill -> cashier_stations
	update_from_bill -> inventory_by_location
	update_from_bill -> sold_products
	update_sales -> sold_products
	update_sales -> customer_bills
	update_sales -> billed_items
	update_sales -> cost_sales_tracker
	add_item_to_bill -> customer_bills
	add_item_to_bill -> products
	add_item_to_bill -> tax_rates
	add_item_to_bill -> billed_items
	receive_payment -> customer_bills
	receive_payment -> cashier_drawer_assignments
	get_tax_payment_due -> billed_items
	get_tax_payment_due -> customer_bills
	get_quantity_sold -> products
	get_quantity_sold -> locations
	get_quantity_sold -> billed_items
	get_quantity_sold -> customer_bills
	get_quantity_sold -> cashier_drawer_assignments
	get_quantity_sold -> cashier_stations
	stock_check -> inventory_by_location
	stock_check -> missing_items
	stock_check -> "cost_sales_tracker (implicitly through update_inventory procedure)"
	sunday_check -> work_hours
	payout -> payroll
	get_name -> staff
}
