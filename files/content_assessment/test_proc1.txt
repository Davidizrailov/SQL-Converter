 /*
        22 
        payout
        
        Get payout for employee for a specifed period.
        This procedure returns the national insurance and
        hlt surchage deductions for that employeee as well.
        
        This data is usefull for reporting and paying employee
        related payments and taxes.
    */
    PROCEDURE payout (
        p_staff_id IN staff.staff_id%TYPE,
        p_begin_date IN DATE,
        p_end_date IN DATE,
        p_gross_pay OUT NOCOPY payroll.gross_pay%TYPE,
        p_net_pay OUT NOCOPY payroll.net_pay%TYPE,
        p_hlt OUT NOCOPY payroll.hlt_surcharge_deduction%TYPE,
        p_nat OUT NOCOPY payroll.nat_insurance_deduction%TYPE,
        p_deductions OUT NOCOPY payroll.net_pay%TYPE
    )
    IS 
    BEGIN 
        
        -- select the sum of gross and net pay from payroll
        -- if date_recieved is null, that means the pay hasn't been collected yet
        SELECT SUM(gross_pay), SUM(net_pay), SUM(hlt_surcharge_deduction), SUM(nat_insurance_deduction)
        INTO p_gross_pay, p_net_pay, p_hlt, p_nat
        FROM payroll
        WHERE staff_id = p_staff_id
        AND date_staff_received BETWEEN p_begin_date AND p_end_date;
        
        -- calculate deductions
        p_deductions := p_hlt + p_nat;
        
    EXCEPTION 
        WHEN no_data_found THEN
            -- staff didn't work? doesn't exist? 
            p_gross_pay := 0;
            p_net_pay := 0;
            p_deductions := 0;
            -- no need worry about too many rows because select uses aggregate function
        WHEN OTHERS THEN
            jta_error.log_error(SQLCODE, SQLERRM);
            p_gross_pay := NULL;
            p_net_pay := NULL;
            p_deductions := NULL;
    END payout;
    
    
    /*
        minor extra functions for debug etc...
    */
    FUNCTION get_name (
        p_staff_id staff.staff_id%TYPE
    ) RETURN VARCHAR2
    IS 
        v_return VARCHAR2(100);
    BEGIN
        SELECT first_name || ' ' || last_name INTO v_return
        FROM staff WHERE staff_id = p_staff_id;
        
        RETURN v_return;
    EXCEPTION
        WHEN OTHERS THEN
            RETURN 'Unknown';
    END get_name;