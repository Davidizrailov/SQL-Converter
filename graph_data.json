{"directed": true, "multigraph": true, "graph": [], "nodes": [{"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 80</p>\n  <p><b>Summary:</b> The Easytrieve code processes employee and department data from two <br>files, generating reports that include departmental details and employees by <br>department, as well as separate reports for employees with high <br>and low salaries based on their department. It also calculates <br>and prints the total salary for each department. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "report.et"}, {"type": "input", "shape": "square", "id": "PERSFILE"}, {"type": "input", "shape": "square", "id": "PERSFILE DEPTFILE"}, {"type": "output", "shape": "square", "id": "FILETYPE IS FILE"}, {"type": "output", "shape": "square", "id": "REPORT_HIGH"}, {"type": "output", "shape": "square", "id": "REPORT1"}, {"type": "output", "shape": "square", "id": "SALARY"}, {"type": "output", "shape": "square", "id": "REPORT2"}, {"type": "output", "shape": "square", "id": "REPORT_LOW"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 39</p>\n  <p><b>Summary:</b> The PLSQL code calculates and prints the average salary for <br>each distinct job title in the \"employees\" table. It uses <br>two cursors: one to iterate through each unique job title <br>and another to fetch and sum the salaries of employees <br>with that job title, then computes and displays the average <br>salary for each job title. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "avg_sal.sql"}, {"type": "input", "shape": "square", "id": "employees"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 15</p>\n  <p><b>Summary:</b> The PLSQL code declares a cursor to select employees with <br>salaries less than a specified amount, then iterates through the <br>results, printing each employee's first name and salary until no <br>more records are found. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "cursor.sql"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 14</p>\n  <p><b>Summary:</b> The code attempts to divide a number by zero and <br>handles the division by zero exception by printing an error <br>message. If the division is successful, it prints the result; <br>otherwise, it catches the exception and outputs an error message. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "error_handle.sql"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 12</p>\n  <p><b>Summary:</b> The code initializes a number `n` to 0 and enters <br>a loop where it increments `n` by 1 and prints <br>its value until `n` exceeds 5, then exits the loop <br>and prints the final value of `n` outside the loop. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "loop.sql"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 24</p>\n  <p><b>Summary:</b> The PLSQL code initializes three integer variables and uses nested <br>loops to calculate a cumulative sum of products, printing the <br>values of the inner loop variables and the final sum. <br>The loops terminate based on specific conditions related to the <br>values of the variables `n` and `k`. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "nestloop.sql"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 8</p>\n  <p><b>Summary:</b> The PLSQL code initializes a string with leading and trailing <br>zeros, then trims these zeros from the string and stores <br>the result in another variable. The final result is intended <br>to be displayed using the DBMS output, but the code <br>is incomplete. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "stringfunc.sql"}, {"type": "input", "shape": "square", "id": "v_input_string"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 409</p>\n  <p><b>Summary:</b> The PLSQL code defines a package `jta_billing` that includes procedures <br>and functions for managing billing operations, such as adding items <br>to a bill, updating bill information, processing payments, and calculating <br>tax payments due. It handles various billing-related tasks, including inventory <br>updates, payment processing, and error handling, ensuring data consistency and <br>integrity within a billing system. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "billing.sql"}, {"type": "input", "shape": "square", "id": "billed_items"}, {"type": "output", "shape": "square", "id": "sold_products"}, {"type": "output", "shape": "square", "id": "customer_bills"}, {"type": "input", "shape": "square", "id": "inventory_by_location"}, {"type": "input", "shape": "square", "id": "cashier_drawer_assignments"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 166</p>\n  <p><b>Summary:</b> The PLSQL code defines a package `jta_employee_ops` that includes procedures <br>for checking the number of Sundays worked by an employee <br>and their availability to work more Sundays, calculating payroll payouts <br>including gross pay, net pay, and deductions, retrieving an employee's <br>full name, and calculating the hours worked by an employee <br>including basic, overtime, and double-time hours. The package body implements <br>these procedures and functions with error handling. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "employee_ops.sql"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 80</p>\n  <p><b>Summary:</b> This PLSQL code defines a package `jta_error` that provides mechanisms <br>for handling errors, including raising custom exceptions, logging errors to <br>a table, and displaying error messages in the console for <br>debugging purposes. The package includes procedures to throw exceptions, log <br>errors with autonomous transactions, and show errors in the console, <br>with specific exceptions for invalid input and missing data. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "error_handling.sql"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 127</p>\n  <p><b>Summary:</b> The PLSQL code defines a package `jta_general_ops` with two procedures: <br>`lookup_barcode` and `stock_check`. The `lookup_barcode` procedure retrieves product details based <br>on a given barcode, handling both regular and price-lookup barcodes, <br>while the `stock_check` procedure verifies and updates the stock count <br>for a product at a specific location, logging discrepancies if <br>any. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "general_ops.sql"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 246</p>\n  <p><b>Summary:</b> The PLSQL code defines a package `jta_inventory_ops` that includes procedures <br>for updating inventory quantities and costs, creating urgent restock purchase <br>orders, and evaluating purchase order lines to ensure they meet <br>restocking criteria. The package body implements these procedures with error <br>handling and database interactions to maintain inventory records and manage <br>restocking processes. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "inventory_ops.sql"}, {"type": "input", "shape": "square", "id": "work_hours"}, {"type": "output", "shape": "square", "id": "payroll"}, {"type": "input", "shape": "square", "id": "staff"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 142</p>\n  <p><b>Summary:</b> The PLSQL code defines a package `jta_payroll_ops` with procedures to <br>process payroll for a given week and retrieve work hours <br>for staff. The `process_payroll` procedure calculates and inserts payroll details <br>into the payroll table, while the `get_hours` procedure calculates the <br>basic, overtime, and double-time hours worked by a staff member <br>within a specified date range. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "payroll_ops.sql"}, {"type": "output", "shape": "square", "id": "jta_errors"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 227</p>\n  <p><b>Summary:</b> The PLSQL code defines a package `jta_financial_ops` that includes procedures <br>and functions for processing payroll, calculating profits within a date <br>range, and retrieving money inflow for a specific location and <br>date range. The `process_payroll` procedure calculates and inserts payroll data <br>for employees based on their work hours and pay rates, <br>the `get_profits_for` procedure computes financial metrics such as goods sold, <br>gross gain, costs, and net gain, and the `get_money_inflow` function <br>returns the total cash or non-cash inflow for a specified <br>location and period. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "financial_ops.sql"}, {"type": "input", "shape": "square", "id": "cost_sales_tracker"}, {"type": "input", "shape": "square", "id": "locations"}, {"type": "input", "shape": "square", "id": "avg_cost"}, {"type": "input", "shape": "square", "id": "products"}, {"type": "output", "shape": "square", "id": "missing_items"}, {"type": "output", "shape": "square", "id": "purchase_order_lines"}, {"type": "output", "shape": "square", "id": "purchase_orders"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 201</p>\n  <p><b>Summary:</b> The PLSQL code defines a package `jta_product_ops` that includes functions <br>and procedures for managing product operations, such as retrieving price <br>change history, calculating recommended prices based on average cost and <br>tax rates, and determining the quantity of a product sold <br>within a specified time frame and location. The package also <br>handles various exceptions by logging errors or raising custom application-specific <br>errors. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "product_ops.sql"}, {"type": "input", "shape": "square", "id": "price_history"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 93</p>\n  <p><b>Summary:</b> The provided PL/SQL code defines four triggers: one that updates <br>job history records after a staff member's job ID changes, <br>another that sends an email alert when inventory levels drop <br>below a certain threshold, a third that logs user logon <br>events, and a fourth that logs user logoff events. Each <br>trigger performs specific actions such as updating tables, sending email <br>notifications, or logging events, and includes exception handling to log <br>errors if they occur. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "triggers.sql"}, {"type": "input", "shape": "square", "id": "authorized_ip_adresses"}, {"type": "output", "shape": "square", "id": "jta_events"}, {"type": "output", "shape": "square", "id": "job_posts_history"}, {"title": "\n<div style=\"border: 1px solid #ddd; padding: 10px; border-radius: 5px;\">\n  <h4 style=\"background: linear-gradient(to right, #ff0000, #008000, #0000ff); -webkit-background-clip: text; -webkit-text-fill-color: transparent;\">\n  Smart Context\n</h4>\n  <p><b>Number of Lines:</b> 185</p>\n  <p><b>Summary:</b> The SQR code is a PeopleSoft report script that calculates <br>and manipulates dates, performing operations such as finding the difference <br>in days, months, and years between dates, parsing dates, and <br>formatting dates. It includes procedures for initializing the report, calculating <br>date differences, and determining the start and end dates of <br>months. </p>\n</div>\n", "color": "#ff9999", "shape": "ellipse", "id": "dates.sqr"}, {"type": "input", "shape": "square", "id": "Init"}, {"type": "input", "shape": "square", "id": "GetWeekDiff"}, {"type": "input", "shape": "square", "id": "Dtu"}, {"type": "input", "shape": "square", "id": "Stdapi"}, {"type": "input", "shape": "square", "id": "BuildingStringDateV2"}, {"type": "input", "shape": "square", "id": "Get_Month_Start_Date"}, {"type": "input", "shape": "square", "id": "DTU"}, {"type": "input", "shape": "square", "id": "BackDayYear"}, {"type": "input", "shape": "square", "id": "Get_Month_End_Date"}, {"type": "input", "shape": "square", "id": "Format"}, {"type": "input", "shape": "square", "id": "GetMonthDiff"}, {"type": "input", "shape": "square", "id": "Get"}, {"type": "input", "shape": "square", "id": "AgeYrs"}, {"type": "input", "shape": "square", "id": "wkDate2"}, {"type": "input", "shape": "square", "id": "GetDateDiff"}, {"type": "input", "shape": "square", "id": "BuildingStringDateV1"}, {"type": "input", "shape": "square", "id": "dtu"}, {"type": "input", "shape": "square", "id": "Init_Report"}, {"type": "input", "shape": "square", "id": "wkDate1"}, {"type": "input", "shape": "square", "id": "B_DT_tmp1"}, {"type": "input", "shape": "square", "id": "Convert"}, {"type": "input", "shape": "square", "id": "MonthDays1"}, {"type": "input", "shape": "square", "id": "GetYearDiff"}, {"type": "input", "shape": "square", "id": "BackDay"}, {"type": "input", "shape": "square", "id": "Dob"}, {"type": "input", "shape": "square", "id": "Main_Report"}, {"type": "input", "shape": "square", "id": "ConvertToComponents"}, {"type": "input", "shape": "square", "id": "E_DT_tmp1"}], "adjacency": [[{"color": "green", "id": "FILETYPE IS FILE", "key": 0}, {"color": "green", "id": "REPORT_HIGH", "key": 0}, {"color": "green", "id": "REPORT1", "key": 0}, {"color": "green", "id": "SALARY", "key": 0}, {"color": "green", "id": "REPORT2", "key": 0}, {"color": "green", "id": "REPORT_LOW", "key": 0}], [{"color": "green", "id": "report.et", "key": 0}], [{"color": "green", "id": "report.et", "key": 0}], [], [], [], [], [], [], [], [{"color": "green", "id": "avg_sal.sql", "key": 0}, {"color": "green", "id": "cursor.sql", "key": 0}], [], [], [], [], [], [{"color": "green", "id": "stringfunc.sql", "key": 0}], [{"color": "green", "id": "inventory_by_location", "key": 0}, {"color": "green", "id": "cashier_drawer_assignments", "key": 0}, {"color": "green", "id": "billed_items", "key": 0}, {"color": "green", "id": "customer_bills", "key": 0}, {"color": "green", "id": "sold_products", "key": 0}, {"color": "red", "weight": 10, "id": "employee_ops.sql", "key": 0}, {"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}, {"color": "red", "weight": 10, "id": "general_ops.sql", "key": 0}, {"color": "red", "weight": 10, "id": "inventory_ops.sql", "key": 0}], [{"color": "green", "id": "billing.sql", "key": 0}, {"color": "green", "id": "financial_ops.sql", "key": 0}, {"color": "green", "id": "product_ops.sql", "key": 0}], [{"color": "green", "id": "billing.sql", "key": 0}], [{"color": "green", "id": "billing.sql", "key": 0}], [{"color": "green", "id": "general_ops.sql", "key": 0}, {"color": "green", "id": "inventory_ops.sql", "key": 0}], [{"color": "green", "id": "financial_ops.sql", "key": 0}], [{"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}, {"color": "red", "weight": 10, "id": "payroll_ops.sql", "key": 0}], [{"color": "green", "id": "jta_errors", "key": 0}], [{"color": "green", "id": "inventory_by_location", "key": 0}, {"color": "green", "id": "missing_items", "key": 0}, {"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}, {"color": "red", "weight": 10, "id": "inventory_ops.sql", "key": 0}], [{"color": "green", "id": "purchase_orders", "key": 0}, {"color": "green", "id": "purchase_order_lines", "key": 0}, {"color": "green", "id": "cost_sales_tracker", "key": 0}, {"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}], [{"color": "green", "id": "employee_ops.sql", "key": 0}, {"color": "green", "id": "financial_ops.sql", "key": 0}, {"color": "green", "id": "payroll_ops.sql", "key": 0}], [{"color": "green", "id": "employee_ops.sql", "key": 0}, {"color": "green", "id": "financial_ops.sql", "key": 0}, {"color": "green", "id": "payroll_ops.sql", "key": 0}], [{"color": "green", "id": "employee_ops.sql", "key": 0}, {"color": "green", "id": "financial_ops.sql", "key": 0}, {"color": "green", "id": "payroll_ops.sql", "key": 0}], [{"color": "green", "id": "payroll", "key": 0}, {"color": "red", "weight": 10, "id": "employee_ops.sql", "key": 0}, {"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}, {"color": "red", "weight": 10, "id": "financial_ops.sql", "key": 0}], [], [{"color": "green", "id": "payroll", "key": 0}, {"color": "red", "weight": 10, "id": "employee_ops.sql", "key": 0}, {"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}, {"color": "red", "weight": 10, "id": "payroll_ops.sql", "key": 0}], [{"color": "green", "id": "financial_ops.sql", "key": 0}, {"color": "green", "id": "inventory_ops.sql", "key": 0}, {"color": "green", "id": "product_ops.sql", "key": 0}], [{"color": "green", "id": "financial_ops.sql", "key": 0}, {"color": "green", "id": "product_ops.sql", "key": 0}], [{"color": "green", "id": "financial_ops.sql", "key": 0}], [{"color": "green", "id": "general_ops.sql", "key": 0}, {"color": "green", "id": "inventory_ops.sql", "key": 0}, {"color": "green", "id": "product_ops.sql", "key": 0}, {"color": "green", "id": "triggers.sql", "key": 0}], [], [{"color": "green", "id": "inventory_ops.sql", "key": 0}], [], [{"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}], [{"color": "green", "id": "product_ops.sql", "key": 0}], [{"color": "green", "id": "jta_events", "key": 0}, {"color": "green", "id": "job_posts_history", "key": 0}, {"color": "red", "weight": 10, "id": "error_handling.sql", "key": 0}], [{"color": "green", "id": "triggers.sql", "key": 0}], [], [], [], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}], [{"color": "green", "id": "dates.sqr", "key": 0}]]}