CREATE OR REPLACE PROCEDURE process_employee_data()
RETURNS STRING
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
PACKAGES = ('snowflake-snowpark-python')
HANDLER = 'run'
AS
$$
from snowflake.snowpark import Session
from snowflake.snowpark.functions import col, avg
from datetime import datetime

def run(session: Session) -> str:
    v_dept_id = 10
    v_bonus_percentage = 0.10
    v_raise_percentage = 0.05

    emp_cursor = session.table("employees").filter(col("department_id") == v_dept_id).select("employee_id", "first_name", "salary").collect()

    for row in emp_cursor:
        v_employee_id = row["employee_id"]
        v_employee_name = row["first_name"]
        v_new_salary = row["salary"]

        # Calculate bonus
        v_bonus = v_new_salary * v_bonus_percentage

        # Calculate raise
        v_raise = v_new_salary * v_raise_percentage

        # Update salary with raise
        v_new_salary += v_raise

        # Insert the bonus into a bonus table
        session.sql(f"""
            INSERT INTO employee_bonus (employee_id, bonus_amount, bonus_date)
            VALUES ({v_employee_id}, {v_bonus}, '{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}')
        """).collect()

        # Update the employee's salary
        session.sql(f"""
            UPDATE employees
            SET salary = {v_new_salary}
            WHERE employee_id = {v_employee_id}
        """).collect()

        print(f'Employee ID: {v_employee_id}, Name: {v_employee_name}, New Salary: {v_new_salary}, Bonus: {v_bonus}')

    v_avg_salary = session.table("employees").filter(col("department_id") == v_dept_id).agg(avg(col("salary")).alias("avg_salary")).collect()[0]["avg_salary"]

    print(f'Average Salary in Department {v_dept_id}: {v_avg_salary}')
    return "Procedure completed successfully"

$$;